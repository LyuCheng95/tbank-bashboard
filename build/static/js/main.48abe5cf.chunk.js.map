{"version":3,"sources":["assets/LoanService.jpg","assets/PersonalProfile.jpg","assets/RecommendationEngine.jpg","assets/landing-bg.jpg","history.js","tBankApi.jsx","pages/Accounts.jsx","components/ProfileTabPanel.jsx","pages/Profile.jsx","components/LoanApplicationPanel.jsx","components/LoanRepaymentPanel.jsx","components/OTPDialog.jsx","pages/Loan.jsx","pages/Loading.jsx","components/OTPLoginDialog.jsx","components/RegisterDialog.jsx","components/LogoutDialog.jsx","components/Header.jsx","layout/Dashboard.jsx","components/Parallax.jsx","layout/LandingPage.jsx","Context.jsx","serviceWorker.js","index.js","App.js"],"names":["module","exports","createBrowserHistory","serverEndPoint","useStyles","makeStyles","theme","accountCard","marginTop","overflowY","borderRadius","height","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","table","minWidth","accountDiv","margin","balanceTitle","textAlign","fontFamily","marginBottom","createData","name","calories","fat","carbs","protein","Accounts","classes","useState","accHist","setAccHist","useEffect","time","Date","now","toISOString","split","join","slice","setFullYear","getFullYear","oneYrAgo","accountHistPromises","JSON","parse","sessionStorage","getItem","balance","map","acc","userID","PIN","OTP","accountID","startDate","endDate","numRecordsPerPage","pageNum","a","async","headerStr","stringify","serviceName","contentStr","axios","post","response","data","getTransactionHistory","id","then","Content","ServiceResponse","ServiceRespHeader","ErrorText","length","Balance","hist","CDMTransactionDetail","transaction_Detail","Promise","all","values","processedV","v","Array","isArray","Card","className","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Grid","container","justify","item","Typography","ExpansionPanelDetails","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","rec","key","transactionDate","scope","currency","narrative","transactionType","transactionAmount","accountTo_interimBalance","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","backgroundColor","palette","background","paper","marginRight","marginLeft","swipeableViews","ProfileTabPanel","useTheme","React","setValue","gridTextField","label","icon","direction","alignItems","xs","TextField","profile","gender","occupation","nationality","ethnicGroup","dateOfBirth","localNumber","cellphone","phoneNumber","countryCode","email","fax","address1","address","streetAddress1","address2","streetAddress2","country","postalCode","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","Tab","axis","onChangeIndex","dir","spacing","introCard","overflow","avatar","transform","borderStyle","borderWidth","graphTitle","Profile","CustomSymbol","size","borderColor","fill","r","strokeWidth","stroke","fillOpacity","mon","x","Year_Month","y","parseInt","top","right","bottom","left","animate","enableSlices","curve","xScale","type","format","precision","xFormat","yScale","axisLeft","legend","legendOffset","axisBottom","tickValues","from","modifiers","style","padding","border","points","point","serieColor","serieId","substr","xFormatted","yFormatted","balanceLineChart","Avatar","givenName","charAt","familyName","toUpperCase","formControl","loanSelect","selectEmpty","loanTypeItem","textField","detailsContainer","boxShadow","applyItem","applyButton","calculateInstallmentButton","LoanApplicationPanel","loanType","setLoanType","loanInfo","setLoanInfo","period","setPeriod","amount","setAmount","interest","setInterest","loanTitle","setLoanTitle","loanPurpose","setLoanPurpose","collateralAssetValue","setCollateralAssetValue","settlementAccount","setSettlementAccount","monthlyInstallment","setMonthlyInstallment","maturityDate","setMaturityDate","openSuccessAlert","setOpenSuccessAlert","successAlert","setSuccessAlert","history","useHistory","detailsRef","useRef","accountsRef","placeHolder","ProductName","MinOpeningBalance","PenaltyRate","RepaymentPenaltyThreshold","InterestRate","ltvRef","disabled","Product","push","current","queryString","location","search","term","filter","loan","handleCalculateInstallment","username","password","productID","ProductID","principle","numberOfMonths","calculateLoanInstallment","installment","InstallmentResponse","Interest","MaturityDate","MonthlyInstallment","setOTPDialogOpen","handleApply","account","loanAmount","assetValue","title","applyForLoan","console","log","FormControl","InputLabel","Select","labelWidth","e","target","MaxLtvRatio","MenuItem","error","helperText","Button","onClick","InputProps","readOnly","Snackbar","open","autoHideDuration","onClose","Alert","severity","calculateButton","LoanRepaymentPanel","repaymentType","setRepaymentType","setAccount","keepMaturity","setKeepMaturity","calculationResult","setCalculationResult","loanAccountsRef","currentStatus","handleCalculate","calculateFullLoanRepayment","result","Object","entries","FullRepaymentResponse","reduce","rows","FormControlLabel","control","Switch","checked","labelPlacement","row","replace","display","flexDirection","secondary","main","form","submit","closeButton","grey","outline","links","cursor","textDecoration","failureAlert","opt","OTPDialog","handleClose","setOTP","Dialog","DialogTitle","IconButton","Container","maxWidth","required","fullWidth","autoComplete","setItem","loanCard","tabs","Loan","OTPDialogOpen","scrollButtons","Loading","getCustomerDetailsPromise","getCustomerDetails","CDMCustomer","customer","customerID","getAllProductDetailsPromise","bankID","getAllProductDetails","getCustomerAccountsPromise","getCustomerAccounts","AccountList","accountPromises","numMonths","getMonthlyBalanceTrend","balanceResponse","balances","TrendData","MonthEndBalance","CurrentMonth","obj","toString","pathname","LinearProgress","OTPLoginDialog","handleOpenRegister","setLogin","setUsername","setPassword","setFailureAlert","setTimeout","handleLogin","loginCustomer","ErrorDetails","handleOTP","requestOTP","toLowerCase","autoFocus","RegisterDialog","handleOpenLogin","repeatPassword","setRepeatPassword","setError","logoutDialogTitle","LogoutDialog","openLogoutDialog","setOpenLogoutDialog","DialogContent","DialogContentText","DialogActions","handleLogout","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","fixedHeight","headerButton","alertButton","appBarLanding","transparent","Header","landing","login","handleOpenLoginDialog","setOpen","showOnScroll","show","setShow","anchorEl","setAnchorEl","handleDrawerOpen","window","addEventListener","handleShow","removeEventListener","pageYOffset","appBarClasses","classNames","Toolbar","edge","clsx","noWrap","currentTarget","Badge","badgeContent","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemAvatar","ListItemText","primary","usernameDiv","Dashboard","showLoginDialog","setShowLoginDialog","showRegisterDialog","setShowRegisterDialog","Drawer","Divider","ListItemIcon","exact","path","clear","parallax","maxHeight","backgroundPosition","backgroundSize","small","Parallax","windowScrollTop","innerWidth","setTransform","resetTransform","image","parallaxClasses","undefined","backgroundImage","infoContainer","minHeight","subtitle","mainRaised","placeholder","startButton","titleContainer","featureBox","opacity","featurePicture","textBox","text","whiteBox","LandingPage","require","sm","md","src","PersonalProfile","RecommendationEngine","LoanService","context","createContext","ContextProvider","setProfile","Provider","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48abe5cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LoanService.ad3b0fcf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PersonalProfile.7d2c90d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RecommendationEngine.12388174.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landing-bg.df8fd3ef.jpg\";","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import axios from 'axios';\r\nconst serverEndPoint = 'http://tbankonline.com/SMUtBank_API/Gateway?';\r\nconst requestOTP = async (userID, PIN) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"requestOTP\", userID: userID, PIN: PIN });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst loginCustomer = async (userID, PIN, OTP) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"loginCustomer\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getCustomerDetails = async (userID, PIN, OTP) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getCustomerDetails\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getMonthlyBalanceTrend = async (userID, PIN, OTP, accountID, numMonths) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getMonthlyBalanceTrend\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ accountID: accountID, numMonths: numMonths });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getCustomerAccounts = async (userID, PIN, OTP) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getCustomerAccounts\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getAllProductDetails = async (userID, PIN, OTP, bankID) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getAllProductDetails\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ Content: { \"bankID\": bankID } });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst calculateLoanInstallment = async (userID, PIN, OTP, principle, productID, numberOfMonths) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"calculateLoanInstallment\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ \"principle\": principle, \"productID\": productID, \"numberOfMonths\": numberOfMonths });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst applyForLoan = async (userID, PIN, OTP, loanAmount, loanPurpose, productID, numberOfMonths, settlementAccount, assetValue, currency, title) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"applyForLoan\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({\r\n    \"loanAmount\": loanAmount,\r\n    \"loanPurpose\": loanPurpose,\r\n    \"productID\": productID,\r\n    \"numberOfMonths\": numberOfMonths,\r\n    \"settlementAccount\": settlementAccount,\r\n    \"assetValue\": assetValue,\r\n    \"currency\": currency,\r\n    \"title\": title\r\n  });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getLoanAccountDetails = async (userID, PIN, OTP, accountID) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getLoanAccountDetails\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ \"Content\": { \"accountID\": accountID } });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getTransactionHistory = async (userID, PIN, OTP, accountID, startDate, endDate, numRecordsPerPage, pageNum) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getTransactionHistory\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({\r\n    \"accountID\": accountID,\r\n    \"startDate\": startDate,\r\n    \"endDate\": endDate,\r\n    \"numRecordsPerPage\": numRecordsPerPage,\r\n    \"pageNum\": pageNum,\r\n  });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst calculateFullLoanRepayment = async (userID, PIN, OTP, accountID) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"calculateFullLoanRepayment\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ \"Content\": { \"accountID\": accountID } });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\nexport {\r\n  requestOTP,\r\n  loginCustomer,\r\n  getCustomerDetails,\r\n  getMonthlyBalanceTrend,\r\n  getCustomerAccounts,\r\n  getAllProductDetails,\r\n  calculateLoanInstallment,\r\n  applyForLoan,\r\n  getLoanAccountDetails,\r\n  calculateFullLoanRepayment,\r\n  getTransactionHistory,\r\n};","import React, { useEffect, useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { getTransactionHistory } from '../tBankApi';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  accountCard: {\r\n    marginTop: \"80px\",\r\n    overflowY: \"scroll\",\r\n    borderRadius: \"40px\",\r\n    height: '70vh',\r\n  },\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  accountDiv: {\r\n    margin: '3% 10% 3% 10%',\r\n  },\r\n  balanceTitle: {\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Roboto Slab\",\r\n    marginTop: \"15px\",\r\n    marginBottom: \"-15px\"\r\n  }\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function Accounts() {\r\n  const classes = useStyles();\r\n  const [accHist, setAccHist] = useState();\r\n  useEffect(() => {\r\n    let time = new Date();\r\n    const now = time.toISOString().split('T').join(' ').slice(0, -1);\r\n    time.setFullYear(time.getFullYear() - 1);\r\n    const oneYrAgo = time.toISOString().split('T').join(' ').slice(0, -1);\r\n    const accountHistPromises = JSON.parse(sessionStorage.getItem('balanceHistory'))\r\n      .balance\r\n      .map(acc => {\r\n        let hist = [];\r\n        return getTransactionHistory(\r\n          sessionStorage.getItem('username'),\r\n          sessionStorage.getItem('password'),\r\n          sessionStorage.getItem('OTP'),\r\n          acc.id,\r\n          oneYrAgo,\r\n          now,\r\n          100,\r\n          1\r\n        ).then(data => {\r\n          const response = data.Content.ServiceResponse;\r\n          if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n            const balance = acc.data[acc.data.length - 1].Balance\r\n            return { id: acc.id, balance: balance, hist: response.CDMTransactionDetail.transaction_Detail };\r\n          }\r\n        })\r\n      });\r\n    Promise.all(accountHistPromises).then(values => {\r\n      let processedV = values.map(v => Array.isArray(v.hist) ? v : { ...v, hist: v.hist ? [v.hist] : [] })\r\n      setAccHist(processedV);\r\n    })\r\n  }, [])\r\n  return (\r\n    <Card className={classes.accountCard}>\r\n      <div className={classes.balanceTitle}> Account Transaction History</div>\r\n      {accHist ? (\r\n        <div className={classes.accountDiv}>\r\n          {accHist.map(acc => {\r\n            return (\r\n              <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Grid container justify=\"space-around\">\r\n                    <Grid item>\r\n                      <Typography className={classes.heading}>ACCOUNT: {acc.id}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography className={classes.heading}>BALANCE: {acc.balance}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                  {acc.hist && acc.hist.length > 0 ? (\r\n                    <TableContainer component={Paper}>\r\n                      <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell>Transaction Date</TableCell>\r\n                            <TableCell align=\"right\">Currency</TableCell>\r\n                            <TableCell align=\"right\">Description</TableCell>\r\n                            <TableCell align=\"right\">Debit</TableCell>\r\n                            <TableCell align=\"right\">Credit</TableCell>\r\n                            <TableCell align=\"right\">Balance</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {acc.hist.map(rec => (\r\n                            <TableRow key={rec.transactionDate}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {rec.transactionDate}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{rec.currency}</TableCell>\r\n                              <TableCell align=\"right\">{rec.narrative}</TableCell>\r\n                              <TableCell align=\"right\">{rec.transactionType < 200 ? rec.transactionAmount : '-'}</TableCell>\r\n                              <TableCell align=\"right\">{rec.transactionType >= 200 ? rec.transactionAmount : '-'}</TableCell>\r\n                              <TableCell align=\"right\">{rec.accountTo_interimBalance}</TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  ) : <div> NO History</div>}\r\n                </ExpansionPanelDetails>\r\n              </ExpansionPanel>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : null\r\n      }\r\n    </Card >\r\n  )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport InsertComment from '@material-ui/icons/InsertComment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport WCIcon from '@material-ui/icons/Wc';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    marginTop: '-10px'\r\n  },\r\n  swipeableViews: {\r\n    height: '290px'\r\n  }\r\n}));\r\n\r\nexport default function ProfileTabPanel() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n  const gridTextField = (label, value, icon) => {\r\n    return (\r\n      <Grid container direction='row' alignItems='flex-end'>\r\n        <Grid item xs={2}>\r\n          {icon}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            value={value}\r\n            id=\"input-with-icon-grid\"\r\n            label={label}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  const profile = JSON.parse(sessionStorage.getItem('profile'));\r\n  const gender = profile.profile.gender === 'M' ? 'Male' : 'Female';\r\n  const occupation = profile.profile.occupation;\r\n  const nationality = profile.profile.nationality;\r\n  const ethnicGroup = profile.profile.ethnicGroup;\r\n  const dateOfBirth = profile.ethnicGroup;\r\n  const localNumber = profile.cellphone.phoneNumber;\r\n  const countryCode = profile.cellphone.countryCode;\r\n  const email = profile.profile.email;\r\n  const fax = profile.profile.fax ? profile.profile.fax : '';\r\n  const address1 = profile.address.streetAddress1;\r\n  const address2 = profile.address.streetAddress2;\r\n  const country = profile.address.country;\r\n  const postalCode = profile.address.postalCode;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"icon label tabs example\"\r\n        >\r\n          <Tab icon={<AssignmentIndIcon />} label=\"Personal Info\" {...a11yProps(0)} />\r\n          <Tab icon={<InsertComment />} label=\"Contact\" {...a11yProps(1)} />\r\n          <Tab icon={<HomeIcon />} label=\"Address\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n        className={classes.swipeableViews}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={5}>\r\n            <Grid item >\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Gender', gender, <WCIcon />)}\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Occupation', occupation, <WorkIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Nationality', nationality, <FaceIcon />)}\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Ethnic Group', ethnicGroup, <SupervisorAccountIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Date of Birth', dateOfBirth, <EventIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={2} alignItems=\"center\">\r\n            <Grid item >\r\n              {gridTextField('Local Number', localNumber, <PhoneIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Country Code', countryCode, <DialpadIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Email', email, <EmailIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Fax', fax, <PrintIcon />)}\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={2} alignItems=\"center\">\r\n            <Grid item >\r\n              {gridTextField('Address', address1, <BusinessIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Address', address2, <BusinessIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Country', country, <PlaceIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Postal Code', postalCode, <EmailIcon />)}\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProfileTabPanel from '../components/ProfileTabPanel';\r\nimport { ResponsiveLine } from '@nivo/line'\r\nconst useStyles = makeStyles(theme => ({\r\n  introCard: {\r\n    marginTop: '80px',\r\n    overflow: 'visible',\r\n    borderRadius: '40px'\r\n  },\r\n  avatar: {\r\n    transform: 'translateY(-70px)',\r\n    margin: '0 auto',\r\n    height: '150px',\r\n    width: '150px',\r\n    fontSize: '80px',\r\n    borderStyle: 'double',\r\n    borderWidth: '5px'\r\n  },\r\n  name: {\r\n    fontFamily: 'Roboto Slab',\r\n    textAlign: 'center',\r\n    color: '#555',\r\n    transform: 'translateY(-50px)',\r\n  },\r\n  occupation: {\r\n    fontSize: '0.75rem',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#777',\r\n    transform: 'translateY(-43px)'\r\n  },\r\n  graphTitle: {\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Roboto Slab\",\r\n    marginTop: \"15px\",\r\n    marginBottom: \"-15px\"\r\n  }\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const profile = JSON.parse(sessionStorage.getItem('profile'));\r\n  const [balanceHistory, setBalanceHistory] = useState([])\r\n  useEffect(() => {\r\n    const userID = sessionStorage.getItem('username');\r\n    const PIN = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    const accountID = sessionStorage.getItem('accountID');\r\n  }, []);\r\n  const CustomSymbol = ({ size, color, borderWidth, borderColor }) => (\r\n    <g>\r\n      <circle fill=\"#fff\" r={size / 2} strokeWidth={borderWidth} stroke={borderColor} />\r\n      <circle\r\n        r={size / 5}\r\n        strokeWidth={borderWidth}\r\n        stroke={borderColor}\r\n        fill={color}\r\n        fillOpacity={0.35}\r\n      />\r\n    </g>\r\n  );\r\n  let data = JSON.parse(sessionStorage.getItem('balanceHistory'))['balance'];\r\n  data = data.map(acc => ({\r\n    id: acc.id,\r\n    data: acc.data.map(mon => ({\r\n      x: mon.Year_Month,\r\n      y: parseInt(mon.Balance)\r\n    }))\r\n  }));\r\n  const balanceLineChart = data => {\r\n    return (\r\n      <ResponsiveLine\r\n        width={500}\r\n        height={500}\r\n        margin={{ top: 90, right: 20, bottom: 10, left: 80 }}\r\n        animate={true}\r\n        enableSlices={'x'}\r\n        curve=\"monotoneX\"\r\n        data={data}\r\n        xScale={{\r\n          type: 'time',\r\n          format: '%Y-%m-%d',\r\n          precision: 'day',\r\n        }}\r\n        xFormat=\"time:%Y-%m-%d\"\r\n        yScale={{\r\n          type: 'linear',\r\n        }}\r\n        axisLeft={{\r\n          legend: 'SGD',\r\n          legendOffset: 12,\r\n        }}\r\n        axisBottom={{\r\n          format: '%b %d',\r\n          tickValues: 'every 2 days',\r\n          legend: 'Time',\r\n          legendOffset: -12,\r\n        }}\r\n        curve='monotoneX'\r\n        enablePointLabel={true}\r\n        pointSymbol={CustomSymbol}\r\n        pointSize={16}\r\n        pointBorderWidth={1}\r\n        pointBorderColor={{\r\n          from: 'color',\r\n          modifiers: [['darker', 0.3]],\r\n        }}\r\n        useMesh={true}\r\n        enableSlices={'x'}\r\n        sliceTooltip={({ slice }) => (\r\n          <div\r\n            style={{\r\n              background: 'white',\r\n              padding: '9px 12px',\r\n              border: '1px solid #ccc',\r\n            }}\r\n          >\r\n            {slice.points.map(point => {\r\n              return (\r\n                <div\r\n                  key={point.id}\r\n                  style={{\r\n                    color: point.serieColor,\r\n                    padding: '3px 0',\r\n                    fontSize: \"0.7rem\"\r\n                  }}\r\n                >\r\n                  <strong>\r\n                    Account:\r\n                  </strong>\r\n                  <strong>\r\n                    {point.serieId.substr(point.serieId.length - 4)}\r\n                  </strong>\r\n                  <br />\r\n                  Time:\r\n                  {point.data.xFormatted}\r\n                  <br />\r\n                  balance:\r\n                  ${point.data.yFormatted}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      />\r\n    )\r\n  };\r\n  return (\r\n    <Card className={classes.introCard}>\r\n      <Grid container direction=\"row\">\r\n        <Grid item xs={6}>\r\n          <div className={classes.graphTitle}>\r\n            Monthly balance\r\n          </div>\r\n          {balanceLineChart(data)}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container direction=\"column\" >\r\n            <Grid item>\r\n              <Avatar className={classes.avatar}>\r\n                {profile.givenName.charAt(0) + profile.familyName.charAt(0)}\r\n              </Avatar>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.name} variant={'h5'}>\r\n                {profile.givenName + ' ' + profile.familyName}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.occupation} >\r\n                {profile.profile.occupation.toUpperCase()}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <ProfileTabPanel />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport { calculateLoanInstallment, applyForLoan } from '../tBankApi';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport queryString from 'query-string';\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    width: '180px',\r\n  },\r\n  loanSelect: {\r\n    color: \"#3f51b5\",\r\n    fontWeight: \"500\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  loanTypeItem: {\r\n    textAlign: \"center\",\r\n  },\r\n  textField: {\r\n    width: '180px',\r\n    '& input': {\r\n      color: \"white !important\"\r\n    },\r\n    '& label': {\r\n      color: \"white !important\"\r\n    },\r\n    '& ::before': {\r\n      borderColor: \"white\"\r\n    }\r\n  },\r\n  detailsContainer: {\r\n    marginRight: \"-20px\",\r\n    marginLeft: \"-20px\",\r\n    backgroundColor: \"#6574c4\",\r\n    color: \"white\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  applyItem: {\r\n    position: \"relative\"\r\n  },\r\n  applyButton: {\r\n    position: \"absolute\",\r\n    bottom: 0\r\n  },\r\n  calculateInstallmentButton: {\r\n    height: '55px'\r\n  }\r\n}));\r\nexport default function LoanApplicationPanel(props) {\r\n  const classes = useStyles();\r\n  const [loanType, setLoanType] = React.useState('');\r\n  const [loanInfo, setLoanInfo] = React.useState([]);\r\n  const [period, setPeriod] = React.useState(\"\");\r\n  const [amount, setAmount] = React.useState(\"\");\r\n  const [interest, setInterest] = React.useState(\"\");\r\n  const [loanTitle, setLoanTitle] = React.useState(\"\");\r\n  const [loanPurpose, setLoanPurpose] = React.useState(\"\");\r\n  const [collateralAssetValue, setCollateralAssetValue] = React.useState(\"\");\r\n  const [settlementAccount, setSettlementAccount] = React.useState(\"\");\r\n  const [monthlyInstallment, setMonthlyInstallment] = React.useState(\"\");\r\n  const [maturityDate, setMaturityDate] = React.useState(\"\");\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const history = useHistory();\r\n  const detailsRef = useRef();\r\n  const accountsRef = useRef([]);\r\n  const placeHolder = { ProductName: \"\", MinOpeningBalance: 0, PenaltyRate: 0, RepaymentPenaltyThreshold: 0, InterestRate: 0 }\r\n  const ltvRef = useRef(\"0\");\r\n  const gridTextField = (label, value, icon) => {\r\n    return (\r\n      <Grid container direction='row' alignItems='flex-end'>\r\n        <Grid item xs={2}>\r\n          {icon}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            value={value}\r\n            id=\"input-with-icon-grid\"\r\n            label={label}\r\n            className={classes.textField}\r\n            disabled={true}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    let loanInfo = JSON.parse(sessionStorage.getItem(\"productList\")).Product;\r\n    loanInfo.push(placeHolder);\r\n    setLoanInfo(loanInfo);\r\n    accountsRef.current = JSON.parse(sessionStorage.getItem(\"accounts\"))\r\n  }, [])\r\n  useEffect(() => {\r\n    if (loanInfo) {\r\n      if (queryString.parse(history.location.search).type) {\r\n        setLoanType(queryString.parse(history.location.search).type);\r\n      }\r\n      if (queryString.parse(history.location.search).amount) {\r\n        setAmount(queryString.parse(history.location.search).amount);\r\n      }\r\n      if (queryString.parse(history.location.search).term) {\r\n        setPeriod(queryString.parse(history.location.search).term);\r\n      }\r\n    }\r\n  }, [loanInfo])\r\n  const handleChangeLoan = v => {\r\n    setLoanType(v);\r\n    ltvRef.current = loanInfo.filter(type => type.ProductName === v)[0].MaxLtvRatio\r\n  };\r\n  detailsRef.current = placeHolder;\r\n  if (loanInfo.length > 0) {\r\n    detailsRef.current = loanInfo.filter(loan => loan.ProductName === loanType)[0]\r\n  }\r\n  const handleCalculateInstallment = () => {\r\n    const username = sessionStorage.getItem('username');\r\n    const password = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    const productID = loanInfo.filter(loan => loan.ProductName === loanType)[0].ProductID;\r\n    calculateLoanInstallment(username, password, OTP, amount, productID, period).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        setSuccessAlert(\"Calculation successful!\")\r\n        setOpenSuccessAlert(true);\r\n        const installment = response.InstallmentResponse;\r\n        setInterest(installment.Interest);\r\n        setMaturityDate(installment.MaturityDate);\r\n        setMonthlyInstallment(installment.MonthlyInstallment);\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        props.setOTPDialogOpen(true);\r\n      }\r\n    })\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setLoanType(\"\")\r\n    setAmount(\"\")\r\n    setPeriod(\"\")\r\n    setInterest(\"\")\r\n    setMaturityDate(\"\")\r\n    setMonthlyInstallment(\"\")\r\n    setLoanTitle(\"\")\r\n    setLoanPurpose(\"\")\r\n    setCollateralAssetValue(\"\")\r\n    setCollateralAssetValue(\"\")\r\n    setSettlementAccount(\"\")\r\n    setMonthlyInstallment(\"\")\r\n    setMaturityDate(\"\")\r\n    detailsRef.current = {}\r\n  }\r\n  const handleApply = () => {\r\n    const username = sessionStorage.getItem('username');\r\n    const password = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    const productID = loanInfo.filter(loan => loan.ProductName === loanType)[0].ProductID;\r\n    const currency = accountsRef.current.filter(account => account.accountID === settlementAccount)[0].currency;\r\n    applyForLoan(\r\n      username,\r\n      password,\r\n      OTP,\r\n      amount,\r\n      loanPurpose,\r\n      productID,\r\n      period,\r\n      settlementAccount,\r\n      collateralAssetValue ? collateralAssetValue : 0,\r\n      currency,\r\n      loanTitle\r\n    ).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        clearFields()\r\n        setSuccessAlert(\"Application successful!\")\r\n        setOpenSuccessAlert(true);\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        props.setOTPDialogOpen(true);\r\n      }\r\n    })\r\n  };\r\n  console.log(accountsRef.current)\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" spacing={10}>\r\n        <Grid item className={classes.loanTypeItem}>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\" >\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>\r\n                  Loan Type\r\n              </InputLabel>\r\n                <Select\r\n                  labelWidth={80}\r\n                  value={loanType}\r\n                  onChange={e => handleChangeLoan(e.target.value)}\r\n                  className={classes.loanSelect}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {loanInfo.map(type => {\r\n                    return (<MenuItem key={type} value={type.ProductName}>{type.ProductName}</MenuItem>);\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                error={!(amount > 100000 || amount === \"\")}\r\n                value={amount}\r\n                onChange={e => setAmount(e.target.value)}\r\n                label=\"Loan Amount\"\r\n                helperText={amount > 100000 || amount === \"\" ? \"\" : \"Loan amount is no less than 100,000\"}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                error={!(period < 360 || period === \"\")}\r\n                value={period}\r\n                onChange={e => setPeriod(e.target.value)}\r\n                label=\"Loan Term (In months)\"\r\n                helperText={period < 360 || period === \"\" ? \"\" : \"Loan term is no larger than 360\"}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n                disabled={period >= 360 || amount < 100000 || period === \"\" || amount === \"\" || loanType === \"\"}\r\n                onClick={() => handleCalculateInstallment()}\r\n                className={classes.calculateInstallmentButton}\r\n              >\r\n                Calculate Installment\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\" spacing={5} className={classes.detailsContainer}>\r\n            <Grid item>\r\n              {gridTextField('Minimum Opening Balance', detailsRef.current.MinOpeningBalance, <AttachMoneyIcon />)}\r\n            </Grid>\r\n            <Grid item>\r\n              {gridTextField('Penalty Rate', detailsRef.current.PenaltyRate, <ThumbDownIcon />)}\r\n            </Grid>\r\n            <Grid item>\r\n              {gridTextField('Repayment Penalty Threshold', detailsRef.current.RepaymentPenaltyThreshold, <InfoIcon />)}\r\n            </Grid>\r\n            <Grid item>\r\n              {gridTextField('Interest Rate', detailsRef.current.InterestRate, <LocalAtmIcon />)}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={10}>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={interest}\r\n                    label=\"Interest\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    disabled={interest === \"\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={maturityDate}\r\n                    label=\"Maturity Date\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    disabled={maturityDate === \"\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={monthlyInstallment}\r\n                    label=\"Monthly Installment\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    disabled={monthlyInstallment === \"\"}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={loanTitle}\r\n                    disabled={interest === \"\"}\r\n                    label=\"Loan Title\"\r\n                    onChange={e => setLoanTitle(e.target.value)}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={loanPurpose}\r\n                    disabled={interest === \"\"}\r\n                    label=\"Loan Purpose\"\r\n                    onChange={e => setLoanPurpose(e.target.value)}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={collateralAssetValue}\r\n                    disabled={\r\n                      interest === \"\" ||\r\n                      ltvRef.current === \"0\"\r\n                    }\r\n                    label=\"Collateral Asset Value\"\r\n                    onChange={e => setCollateralAssetValue(e.target.value)}\r\n                    variant=\"outlined\"\r\n                    error={\r\n                      interest &&\r\n                      loanType &&\r\n                      collateralAssetValue !== \"\" &&\r\n                      loanInfo.filter(type => type.ProductName === loanType)[0].MaxLtvRatio > 0 &&\r\n                      (amount / ltvRef.current > collateralAssetValue)\r\n                    }\r\n                    helperText={\r\n                      (interest &&\r\n                        loanType &&\r\n                        collateralAssetValue !== \"\" &&\r\n                        loanInfo.filter(type => type.ProductName === loanType)[0].MaxLtvRatio > 0 &&\r\n                        (amount / ltvRef.current > collateralAssetValue)) ?\r\n                        \"Assest Value is no less than \" + amount / ltvRef.current :\r\n                        ltvRef.current === \"0\" ? \"not applicable\" : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel>\r\n                      Settlement Account\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelWidth={130}\r\n                      disabled={interest === \"\"}\r\n                      value={settlementAccount}\r\n                      onChange={e => setSettlementAccount(e.target.value)}\r\n                    >\r\n                      {accountsRef.current.filter(account => account.productID == '101').map(account => {\r\n                        return (<MenuItem key={account.accountID} value={account.accountID}>{account.accountID}</MenuItem>);\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item className={classes.applyItem}>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n                disabled={\r\n                  !loanType ||\r\n                  amount < 100000 ||\r\n                  period > 360 ||\r\n                  !period ||\r\n                  !loanTitle ||\r\n                  !loanPurpose ||\r\n                  (!collateralAssetValue && ltvRef.current !== \"0\") ||\r\n                  !settlementAccount\r\n                }\r\n                onClick={() => handleApply()}\r\n                className={classes.applyButton}\r\n              >\r\n                Apply\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item className={classes.applyItem}>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n        <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n          {successAlert}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport { calculateFullLoanRepayment, getLoanAccountDetails } from '../tBankApi';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n  loanSelect: {\r\n    color: \"#3f51b5\",\r\n    fontWeight: \"500\",\r\n    width: \"200px\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  loanTypeItem: {\r\n    textAlign: \"center\",\r\n  },\r\n  textField: {\r\n    width: '180px',\r\n    '& input': {\r\n      color: \"white !important\"\r\n    },\r\n    '& label': {\r\n      color: \"white !important\"\r\n    },\r\n    '& ::before': {\r\n      borderColor: \"white\"\r\n    }\r\n  },\r\n  detailsContainer: {\r\n    marginRight: \"-20px\",\r\n    marginLeft: \"-20px\",\r\n    backgroundColor: \"#6574c4\",\r\n    color: \"white\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  applyItem: {\r\n    position: \"relative\"\r\n  },\r\n  calculateButton: {\r\n    height: '55px'\r\n  }\r\n}));\r\nexport default function LoanRepaymentPanel(props) {\r\n  const classes = useStyles();\r\n  const [repaymentType, setRepaymentType] = React.useState('');\r\n  const [account, setAccount] = React.useState('');\r\n  const [amount, setAmount] = React.useState('');\r\n  const [keepMaturity, setKeepMaturity] = React.useState(true);\r\n  const [loanAccounts, setLoanAccounts] = React.useState([{ accountID: \"\" }]);\r\n  const [calculationResult, setCalculationResult] = React.useState([])\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const loanAccountsRef = useRef([]);\r\n  loanAccountsRef.current = JSON.parse(sessionStorage\r\n    .getItem(\"accounts\"))\r\n    .filter(account => account.productID !== '101' && account.currentStatus === \"Open\");\r\n  const gridTextField = (label, value, icon) => {\r\n    return (\r\n      <Grid container direction='row' alignItems='flex-end'>\r\n        <Grid item xs={2}>\r\n          {icon}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            value={value}\r\n            id=\"input-with-icon-grid\"\r\n            label={label}\r\n            className={classes.textField}\r\n            disabled={true}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  const handleCalculate = () => {\r\n    const username = sessionStorage.getItem('username');\r\n    const password = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    calculateFullLoanRepayment(username, password, OTP, account).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        setSuccessAlert(\"Calculation successful!\")\r\n        setOpenSuccessAlert(true);\r\n        const result = Object.entries(response.FullRepaymentResponse)\r\n          .reduce((rows, key, index) => (index % 4 == 0 ? rows.push([key])\r\n            : rows[rows.length - 1].push(key)) && rows, []);\r\n        setCalculationResult(result);\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        props.setOTPDialogOpen(true);\r\n      }\r\n    })\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" spacing={5}>\r\n        <Grid item>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\">\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>\r\n                  Repayment Type\r\n                </InputLabel>\r\n                <Select\r\n                  labelWidth={120}\r\n                  value={repaymentType}\r\n                  onChange={e => setRepaymentType(e.target.value)}\r\n                  className={classes.loanSelect}\r\n                >\r\n                  <MenuItem value=\"fullRepayment\">\r\n                    <strong>Full Repayment</strong>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"partialRepayment\">\r\n                    <strong>Partial Repayment</strong>\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>\r\n                  Account\r\n                </InputLabel>\r\n                <Select\r\n                  labelWidth={80}\r\n                  value={account}\r\n                  onChange={e => setAccount(e.target.value)}\r\n                  className={classes.loanSelect}\r\n                >\r\n                  {loanAccountsRef.current.map(a => (\r\n                    <MenuItem key={a.accountID} value={a.accountID}>\r\n                      {a.accountID}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {repaymentType === \"partialRepayment\" ? (\r\n              <>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={amount}\r\n                    label=\"Repayment Amount\"\r\n                    onChange={e => setAmount(e.target.value)}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Grid container direction=\"column\">\r\n                    <Grid item>\r\n                      Keep Maturity Date?\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={keepMaturity}\r\n                            onChange={e => setKeepMaturity(e.target.checked)}\r\n                            value=\"checkedA\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                        label={keepMaturity ? \"Yes\" : \"No\"}\r\n                        labelPlacement=\"end\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </>\r\n            ) : null}\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n                disabled={!account || !repaymentType}\r\n                onClick={() => handleCalculate()}\r\n                className={classes.calculateButton}\r\n              >\r\n                Calculate\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container direction=\"column\" spacing={5} className={classes.detailsContainer}>\r\n            {calculationResult.map(row => (\r\n              <Grid item>\r\n                <Grid container direction=\"row\" justify=\"space-evenly\">\r\n                  {row.map(data => (\r\n                    <Grid item>\r\n                      {gridTextField(data[0].replace(/([A-Z])/g, \" $1\"), data[1])}\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n        <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n          {successAlert}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}","import React, { Component, useState, useEffect, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { requestOTP, loginCustomer } from '../tBankApi';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  },\r\n  container: {\r\n    width: '400px',\r\n  },\r\n  opt: {\r\n    margin: '20% 10%',\r\n    height: '60%',\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nexport default function OTPDialog({\r\n  open,\r\n  handleClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [OTP, setOTP] = useState(\"\");\r\n  const setNewOTP = () => {\r\n    sessionStorage.setItem('OTP', OTP)\r\n    handleClose()\r\n  }\r\n  return (\r\n    <Dialog open={open} >\r\n      <DialogTitle>\r\n        OTP expired!\r\n        <br />\r\n        please update OTP and request again.\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n        <Grid container direction=\"row\">\r\n          <Grid item>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"otp\"\r\n              label=\"New OTP\"\r\n              type=\"otp\"\r\n              id=\"otp\"\r\n              autoComplete=\"\"\r\n              onChange={e => setOTP(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid>\r\n            <Button\r\n              disabled={!OTP}\r\n              color='secondary'\r\n              variant='contained'\r\n              className={classes.opt}\r\n              onClick={() => setNewOTP()}\r\n            >\r\n              confirm\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Dialog>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport LoanApplicationPanel from '../components/LoanApplicationPanel';\r\nimport LoanRepaymentPanel from '../components/LoanRepaymentPanel';\r\nimport OTPDialog from \"../components/OTPDialog\";\r\nimport queryString from 'query-string';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  loanCard: {\r\n    marginTop: \"80px\",\r\n    overflow: \"visible\",\r\n    borderRadius: \"40px\",\r\n  },\r\n  tabs: {\r\n    height: \"60px\"\r\n  }\r\n}))\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\nexport default function Loan() {\r\n  const [value, setValue] = React.useState(0);\r\n  const [OTPDialogOpen, setOTPDialogOpen] = React.useState(false)\r\n  const history = useHistory();\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.loanCard}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n          className={classes.tabs}\r\n        >\r\n          <Tab label=\"Loan Application\" {...a11yProps(0)} />\r\n          {/* <Tab label=\"Loan Repayment\" {...a11yProps(1)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <LoanApplicationPanel\r\n          setOTPDialogOpen={setOTPDialogOpen}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <LoanRepaymentPanel\r\n          setOTPDialogOpen={setOTPDialogOpen}\r\n        />\r\n      </TabPanel>\r\n      <OTPDialog\r\n        open={OTPDialogOpen}\r\n        handleClose={() => setOTPDialogOpen(false)}\r\n      />\r\n    </Card>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { getCustomerDetails, getCustomerAccounts, getMonthlyBalanceTrend, getAllProductDetails } from '../tBankApi';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport OTPDialog from '../components/OTPDialog';\r\nexport default function Loading(props) {\r\n  const username = sessionStorage.getItem(\"username\");\r\n  const password = sessionStorage.getItem(\"password\");\r\n  const OTP = sessionStorage.getItem(\"OTP\");\r\n  const history = useHistory();\r\n  const [OTPDialogOpen, setOTPDialogOpen] = React.useState(false)\r\n  useEffect(() => {\r\n    const getCustomerDetailsPromise = getCustomerDetails(username, password, OTP).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        sessionStorage.setItem('customerId', response.CDMCustomer.customer.customerID);\r\n        sessionStorage.setItem('profile', JSON.stringify(response.CDMCustomer));\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        setOTPDialogOpen(true);\r\n      }\r\n    });\r\n    const getAllProductDetailsPromise = getAllProductDetails(username, password, OTP, 1).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        sessionStorage.setItem('productList', JSON.stringify(response[\"Product_ParametersList_Read-Response\"][\"ProductList\"]));\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        setOTPDialogOpen(true);\r\n      }\r\n    });\r\n    const getCustomerAccountsPromise = getCustomerAccounts(username, password, OTP).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        sessionStorage.setItem('accounts', JSON.stringify(response.AccountList.account));\r\n        const accountPromises = response.AccountList.account.map(account => {\r\n          if (account.accountID) {\r\n            return getMonthlyBalanceTrend(username, password, OTP, account.accountID, 6).then(data => {\r\n              const balanceResponse = data.Content.ServiceResponse;\r\n              if (balanceResponse.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n                let balances = balanceResponse.TrendData.MonthEndBalance;\r\n                balances.push(balanceResponse.TrendData.CurrentMonth);\r\n                return { id: account.accountID, data: balances };\r\n              } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n                setOTPDialogOpen(true);\r\n              }\r\n            })\r\n          }\r\n        });\r\n        return Promise.all(accountPromises).then(values => {\r\n          sessionStorage.setItem('balanceHistory', '{\"balance\": [' + values.map(obj => JSON.stringify(obj)).toString() + ']}');\r\n        })\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        setOTPDialogOpen(true);\r\n      }\r\n    });\r\n    Promise.all([\r\n      getCustomerDetailsPromise,\r\n      getAllProductDetailsPromise,\r\n      getCustomerAccountsPromise\r\n    ]).then(() => {\r\n      if (history.location.pathname !== '/dashboard') {\r\n        history.push('/dashboard');\r\n      }\r\n    })\r\n  }, []);\r\n  return (\r\n    <>\r\n      <LinearProgress />\r\n      <OTPDialog\r\n        open={OTPDialogOpen}\r\n        handleClose={() => setOTPDialogOpen(false)}\r\n      />\r\n    </>\r\n\r\n  );\r\n}","import React, { Component, useState, useEffect, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { requestOTP, loginCustomer } from '../tBankApi';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  },\r\n  container: {\r\n    width: '400px',\r\n  },\r\n  opt: {\r\n    margin: '20% 10%',\r\n    height: '60%',\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nexport default function OTPLoginDialog({\r\n  open,\r\n  handleClose,\r\n  handleOpenRegister,\r\n  setOpenSuccessAlert,\r\n  setLogin,\r\n  setSuccessAlert }) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [OTP, setOTP] = useState(\"\");\r\n  const [failureAlert, setFailureAlert] = useState(null);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (failureAlert) {\r\n      setTimeout(() => { setFailureAlert(null) }, 10000);\r\n    }\r\n  }, [failureAlert])\r\n  // const handleClickRegister = () => {\r\n  //   handleClose();\r\n  //   handleOpenRegister();\r\n  // };\r\n  const handleLogin = (username, password) => {\r\n    const p1 = loginCustomer(username, password, OTP).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorDetails=== 'Success') {\r\n        sessionStorage.setItem('username', username);\r\n        sessionStorage.setItem('password', password);\r\n        sessionStorage.setItem('OTP', OTP);\r\n        handleClose();\r\n        setLogin(true);\r\n        setSuccessAlert('Login Successful!');\r\n        setOpenSuccessAlert(true);\r\n        if (history.location.pathname != 'loading'){\r\n          history.push('/dashboard/loading');\r\n        }\r\n      } else {\r\n        setFailureAlert('Invalid username/password/OTP');\r\n      }\r\n    });\r\n  }\r\n  const handleOTP = (username, password) => {\r\n    requestOTP(username, password).then(data => {\r\n      if (data.Content.ServiceResponse.ServiceRespHeader.ErrorDetails.toLowerCase() === 'success') {\r\n        setSuccessAlert('OTP sent!');\r\n        setOpenSuccessAlert(true);\r\n      } else {\r\n        setFailureAlert('Invalid username/password');\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} >\r\n        <DialogTitle>\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Login\r\n            </Typography>\r\n            <Grid container direction='column'>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"usename\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  onChange={e => setUsername(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction='row'>\r\n                  <Grid item>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"otp\"\r\n                      label=\"OTP\"\r\n                      type=\"otp\"\r\n                      id=\"otp\"\r\n                      autoComplete=\"\"\r\n                      onChange={e => setOTP(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      disabled={!username || !password}\r\n                      color='secondary'\r\n                      variant='contained'\r\n                      className={classes.opt}\r\n                      onClick={() => handleOTP(username, password)}\r\n                    >\r\n                      Get OTP\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {failureAlert ? (\r\n              <Alert className={classes.failureAlert} severity=\"error\">\r\n                {failureAlert}\r\n              </Alert>\r\n            ) : null}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleLogin(username, password)}\r\n            >\r\n              Login\r\n            </Button>\r\n            {/* <Typography\r\n              onClick={handleClickRegister}\r\n              className={classes.links}\r\n            >\r\n              {\"Don't have an account? Register>>\"}\r\n            </Typography> */}\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React, { Component, useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import { register } from '../api';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  container: {\r\n    width: '500px'\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  }\r\n}));\r\n\r\nexport default function RegisterDialog({\r\n  open,\r\n  handleClose,\r\n  handleOpenLogin,\r\n  setOpenSuccessAlert,\r\n  setLogin,\r\n  setSuccessAlert }) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [failureAlert, setFailureAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (repeatPassword == password) {\r\n      setError(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  },[repeatPassword]);\r\n  const handleRegister = (username, password) => {\r\n    // register(username, password).then(response => {\r\n    //   if (response.data.status == 0) {\r\n    //     setFailureAlert(true)\r\n    //   } else {\r\n    //     sessionStorage.setItem('username', username)\r\n    //     handleClose();\r\n    //     setOpenSuccessAlert(true);\r\n    //     setLogin(true)\r\n    //     setSuccessAlert('Registeration Successful');\r\n    //     if (history.location.pathname !== '/dashboard') {\r\n    //       history.push('/dashboard');\r\n    //     }\r\n    //   }\r\n    // });\r\n  }\r\n  const handleClickLogin = () => {\r\n    handleClose();\r\n    handleOpenLogin();\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} >\r\n        <DialogTitle>\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"username\"\r\n              name=\"email\"\r\n              autoComplete=\"xxx@xxx.com\"\r\n              autoFocus\r\n              onChange={e => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              error={error}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"repeat password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setRepeatPassword(e.target.value)}\r\n            />\r\n            {failureAlert ? (\r\n              <Alert className={classes.failureAlert} severity=\"error\">\r\n                Registration Failed\r\n              </Alert>\r\n            ) : null}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleRegister(username, password)}\r\n            >\r\n              Register\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Typography\r\n                  onClick={handleClickLogin}\r\n                  className={classes.links}\r\n                >\r\n                  Already have an account? Login >>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  logoutDialogTitle: {\r\n    backgroundColor: '#3f51b5',\r\n    color: '#FFFFFF',\r\n  }\r\n}));\r\n\r\nexport default function LogoutDialog(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog\r\n      open={props.openLogoutDialog}\r\n      onClose={() => props.setOpenLogoutDialog(false)}\r\n    >\r\n      <DialogTitle className={classes.logoutDialogTitle}>{\"Logout\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Do you want to logout?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpenLogoutDialog(false)} variant='contained' color=\"primary\">\r\n          No\r\n        </Button>\r\n        <Button onClick={props.handleLogout} color=\"secondary\" variant='contained' autoFocus>\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport classNames from 'classnames';\r\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nconst drawerWidth = 240\r\n// core components\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    '&$focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: '64px',\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  headerButton: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  alertButton: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n    marginRight: '10px',\r\n  },\r\n  logoutDialogTitle: {\r\n    backgroundColor: '#3f51b5',\r\n    color: '#FFFFFF',\r\n  },\r\n  appBarLanding: {\r\n    position: 'fixed',\r\n    transition: 'height 1000ms'\r\n  },\r\n  transparent: {\r\n    backgroundColor: 'transparent',\r\n  }\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const { color, landing, login, setLogin, handleOpenLoginDialog, setOpenLogoutDialog, open, setOpen, showOnScroll } = props;\r\n  const classes = useStyles();\r\n  const [show, setShow] = useState(!landing);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const history = useHistory();\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (showOnScroll) {\r\n      window.addEventListener(\"scroll\", handleShow);\r\n    }\r\n    return function cleanup() {\r\n      if (showOnScroll) {\r\n        window.removeEventListener(\"scroll\", handleShow);\r\n      }\r\n    };\r\n  });\r\n  const handleShow = () => {\r\n    const { showOnScroll } = props;\r\n    const windowsScrollTop = window.pageYOffset;\r\n    if (windowsScrollTop > showOnScroll.height) {\r\n      setShow(true);\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n  const appBarClasses = classNames({\r\n    [classes.transparent]: !show,\r\n    [classes.appBar]: true,\r\n    [classes.appBarShift]: open,\r\n    [classes.appBarLanding]: landing\r\n  });\r\n  const render = () => {\r\n    return (\r\n      <AppBar position=\"absolute\" className={appBarClasses}>\r\n        <Toolbar className={classes.toolbar}>\r\n          {landing ? null : (\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n          )}\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            IS444\r\n          </Typography>\r\n          <IconButton color=\"inherit\"\r\n            className={classes.alertButton}\r\n            onClick={event => {\r\n              setAnchorEl(anchorEl ? null : event.currentTarget);\r\n            }}\r\n          >\r\n            <Badge badgeContent={2} color='error'>\r\n              <NotificationImportantIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <Popover\r\n            open={Boolean(anchorEl)}\r\n            anchorEl={anchorEl}\r\n            onClose={() => setAnchorEl(null)}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n          >\r\n            <List className={classes.root}>\r\n              <ListItem\r\n                button\r\n                onClick={() => {\r\n                  history.push('/dashboard/loan?type=Home Loan&amount=15000000&term=12')\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <MonetizationOnIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Promotion\" secondary=\"home loan\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <AccountBalanceIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"XXX\" secondary=\"XXXX\" />\r\n              </ListItem>\r\n            </List>\r\n          </Popover>\r\n          {login ? (\r\n            <>\r\n              <div className={classes.usernameDiv}>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                  {sessionStorage.getItem('username').length > 15 ? (\r\n                    sessionStorage.getItem('username').slice(0, 13) + '...'\r\n                  ) : (sessionStorage.getItem('username'))}\r\n                </Typography>\r\n              </div>\r\n              <IconButton color=\"inherit\"\r\n                className={classes.headerButton}\r\n                onClick={() => setOpenLogoutDialog(true)}\r\n              >\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n              <IconButton color=\"inherit\"\r\n                className={classes.headerButton}\r\n                onClick={() => handleOpenLoginDialog(true)}\r\n              >\r\n                <PersonIcon />\r\n              </IconButton>\r\n            )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n  return render();\r\n}","\r\nimport React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport { useHistory, Route, Switch } from \"react-router-dom\";\r\nimport Accounts from '../pages/Accounts';\r\nimport Profile from '../pages/Profile';\r\nimport Loan from '../pages/Loan';\r\nimport Loading from '../pages/Loading';\r\nimport OTPLoginDialog from '../components/OTPLoginDialog';\r\nimport RegisterDialog from '../components/RegisterDialog';\r\nimport LogoutDialog from '../components/LogoutDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    overflow: 'hidden',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    backgroundColor: '#f0efea',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    '&$focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: '64px',\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  headerButton: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showLoginDialog, setShowLoginDialog] = React.useState(false);\r\n  const [showRegisterDialog, setShowRegisterDialog] = React.useState(false);\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const [login, setLogin] = React.useState(sessionStorage.getItem('username'));\r\n  const [openLogoutDialog, setOpenLogoutDialog] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenLoginDialog = () => {\r\n    setShowLoginDialog(true);\r\n  };\r\n  const handleLogout = () => {\r\n    setOpenLogoutDialog(false);\r\n    setLogin(false);\r\n    history.push('/');\r\n    sessionStorage.clear()\r\n  };\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem('username')) {\r\n      setLogin(true);\r\n    } else {\r\n      setLogin(false);\r\n    }\r\n  }, []);\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header\r\n        login={login}\r\n        setLogin={setLogin}\r\n        handleOpenLoginDialog={handleOpenLoginDialog}\r\n        setOpenLogoutDialog={setOpenLogoutDialog}\r\n        open={open}\r\n        setOpen={setOpen}\r\n      />\r\n      <OTPLoginDialog\r\n        open={showLoginDialog}\r\n        handleClose={() => setShowLoginDialog(false)}\r\n        handleOpenRegister={() => setShowRegisterDialog(true)}\r\n        setLogin={() => setLogin(true)}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      <RegisterDialog\r\n        open={showRegisterDialog}\r\n        handleClose={() => setShowRegisterDialog(false)}\r\n        handleOpenLogin={() => setShowLoginDialog(true)}\r\n        setLogin={() => setLogin(true)}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push('/dashboard/loading')} >\r\n            <ListItemIcon>\r\n              <PermContactCalendarIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Profile\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/dashboard/account')}>\r\n            <ListItemIcon>\r\n              <AccountBalanceWalletIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Accounts\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/dashboard/loan')}>\r\n            <ListItemIcon>\r\n              <LocalAtmIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Loan\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Route exact path=\"/dashboard\" component={Profile} />\r\n          <Route path=\"/dashboard/account\" component={Accounts} />\r\n          <Route path=\"/dashboard/loan\" component={Loan} />\r\n          <Route path=\"/dashboard/loading\" component={Loading} />\r\n        </Container>\r\n        <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n          <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n            {successAlert}\r\n          </Alert>\r\n        </Snackbar>\r\n        <LogoutDialog\r\n          setOpenLogoutDialog={setOpenLogoutDialog}\r\n          handleLogout={handleLogout}\r\n          openLogoutDialog={openLogoutDialog}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// core components\r\nconst useStyles = makeStyles(theme=>({\r\n  parallax: {\r\n    height: \"90vh\",\r\n    maxHeight: \"1000px\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    border: \"0\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  filter: {\r\n    \"&:before\": {\r\n      background: \"rgba(0, 0, 0, 0.5)\"\r\n    },\r\n    \"&:after,&:before\": {\r\n      position: \"absolute\",\r\n      zIndex: \"1\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"block\",\r\n      left: \"0\",\r\n      top: \"0\",\r\n      content: \"''\"\r\n    }\r\n  },\r\n  small: {\r\n    height: \"380px\"\r\n  }\r\n}));\r\n\r\nexport default function Parallax(props) {\r\n  const classes = useStyles();\r\n  let windowScrollTop;\r\n  if (window.innerWidth >= 768) {\r\n    windowScrollTop = window.pageYOffset / 3;\r\n  } else {\r\n    windowScrollTop = 0;\r\n  }\r\n  const [transform, setTransform] = React.useState(\r\n    \"translate3d(0,\" + windowScrollTop + \"px,0)\"\r\n  );\r\n  React.useEffect(() => {\r\n    if (window.innerWidth >= 768) {\r\n      window.addEventListener(\"scroll\", resetTransform);\r\n    }\r\n    return function cleanup() {\r\n      if (window.innerWidth >= 768) {\r\n        window.removeEventListener(\"scroll\", resetTransform);\r\n      }\r\n    };\r\n  });\r\n  const resetTransform = () => {\r\n    var windowScrollTop = window.pageYOffset / 3;\r\n    setTransform(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\r\n  };\r\n  const { filter, className, children, style, image, small } = props;\r\n  const parallaxClasses = classNames({\r\n    [classes.parallax]: true,\r\n    [classes.filter]: filter,\r\n    [classes.small]: small,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div\r\n      className={parallaxClasses}\r\n      style={{\r\n        ...style,\r\n        backgroundImage: \"url(\" + image + \")\",\r\n        transform: transform\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nParallax.propTypes = {\r\n  className: PropTypes.string,\r\n  filter: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  style: PropTypes.string,\r\n  image: PropTypes.string,\r\n  small: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\n\r\n// core components\r\n// import Header from \"components/Header/Header.js\";\r\n// import Footer from \"components/Footer/Footer.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import HeaderLinks from \"components/Header/HeaderLinks.js\";\r\nimport Parallax from \"../components/Parallax.jsx\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Header from '../components/Header';\r\nimport OTPLoginDialog from '../components/OTPLoginDialog';\r\n// import RegisterDialog from '../components/RegisterDialog';\r\nimport LogoutDialog from '../components/LogoutDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoanService from \"../assets/LoanService.jpg\";\r\nimport PersonalProfile from \"../assets/PersonalProfile.jpg\";\r\nimport RecommendationEngine from \"../assets/RecommendationEngine.jpg\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    zIndex: \"12\",\r\n    color: \"#FFFFFF\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n  infoContainer: {\r\n    zIndex: \"12\",\r\n    color: \"#FFFFFF\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  title: {\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n    minHeight: \"32px\",\r\n    color: \"#FFFFFF\",\r\n    textDecoration: \"none\"\r\n  },\r\n  subtitle: {\r\n    fontSize: \"1.313rem\",\r\n    maxWidth: \"500px\",\r\n    margin: \"10px auto 0\"\r\n  },\r\n  main: {\r\n    background: \"#FFFFFF\",\r\n    position: \"relative\",\r\n    zIndex: \"3\"\r\n  },\r\n  mainRaised: {\r\n    margin: \"-60px 30px 0px\",\r\n    borderRadius: \"6px\",\r\n    boxShadow:\r\n      \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\r\n  },\r\n  placeholder: {\r\n    height: '1000px'\r\n  },\r\n  startButton: {\r\n    height: '50px'\r\n  },\r\n  titleContainer: {\r\n    padding: \"0 80px\"\r\n  },\r\n  featureBox: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    display: \"inline-block\",\r\n    \"&:hover\": {\r\n      opacity: '0.8',\r\n      color: \"black\"\r\n    }\r\n  },\r\n  featurePicture: {\r\n    width: \"100%\",\r\n  },\r\n  textBox: {\r\n    position: \"absolute\",\r\n    zIndex: \"999\",\r\n    margin: \"0 auto\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    top: \"25%\",\r\n    fontSize: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n  text: {\r\n    margin: \"0\",\r\n    textAlign: \"center\",\r\n  },\r\n  whiteBox: {\r\n    display: \"inline-block\",\r\n    borderStyle: \"double\"\r\n  }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n  const classes = useStyles();\r\n  const { ...rest } = props;\r\n  const [showLoginDialog, setShowLoginDialog] = React.useState(false);\r\n  const [showRegisterDialog, setShowRegisterDialog] = React.useState(false);\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const [login, setLogin] = React.useState(sessionStorage.getItem('username'));\r\n  const [openLogoutDialog, setOpenLogoutDialog] = React.useState(false);\r\n  const history = useHistory();\r\n  const handleLogout = () => {\r\n    setOpenLogoutDialog(false);\r\n    setLogin(false);\r\n    history.push('/');\r\n    sessionStorage.clear()\r\n  };\r\n  return (\r\n    <div>\r\n      <Header\r\n        landing\r\n        showOnScroll={{\r\n          height: 550,\r\n        }}\r\n        handleOpenLoginDialog={() => setShowLoginDialog(true)}\r\n        login={login}\r\n        setLogin={setLogin}\r\n        setOpenLogoutDialog={() => setOpenLogoutDialog(true)}\r\n      />\r\n      <Parallax filter image={require(\"../assets/landing-bg.jpg\")}>\r\n        <div className={classes.container}>\r\n          <Grid container className={classes.titleContainer}>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n              <h1 className={classes.title}>Your Personalised Recommender</h1>\r\n              <h4>\r\n                Provide personal, intelligent recommendations.\r\n              </h4>\r\n              <br />\r\n              <Button\r\n                className={classes.startButton}\r\n                variant='contained'\r\n                color='secondary'\r\n                onClick={() => setShowLoginDialog(true)}\r\n              >\r\n                <Typography variant='h6'>\r\n                  Get Started\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Parallax>\r\n      <div className={classNames(classes.main, classes.mainRaised)}>\r\n        <div className={classes.infoContainer}>\r\n          <div className={classes.featureBox}>\r\n            <img className={classes.featurePicture} src={PersonalProfile} />\r\n            <div className={classes.textBox}>\r\n              <div className={classes.whiteBox}>\r\n                <h2 className={classes.text}>Personal Profile</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.featureBox}>\r\n            <img className={classes.featurePicture} src={RecommendationEngine} />\r\n            <div className={classes.textBox}>\r\n              <div className={classes.whiteBox}>\r\n                <h2 className={classes.text}>Recommendation</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.featureBox}>\r\n            <img className={classes.featurePicture} src={LoanService} />\r\n            <div className={classes.textBox}>\r\n              <div className={classes.whiteBox}>\r\n                <h2 className={classes.text}>Loan Service</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <OTPLoginDialog\r\n        open={showLoginDialog}\r\n        handleClose={() => setShowLoginDialog(false)}\r\n        handleOpenRegister={() => setShowRegisterDialog(true)}\r\n        setLogin={() => null}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      {/* <RegisterDialog\r\n        open={showRegisterDialog}\r\n        handleClose={() => setShowRegisterDialog(false)}\r\n        handleOpenLogin={() => setShowLoginDialog(true)}\r\n        setLogin={() => null}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      /> */}\r\n      <LogoutDialog\r\n        setOpenLogoutDialog={setOpenLogoutDialog}\r\n        handleLogout={handleLogout}\r\n        openLogoutDialog={openLogoutDialog}\r\n      />\r\n      <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n        <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n          {successAlert}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\n// Provider and Consumer are connected through their \"parent\" context\r\nconst context = createContext();\r\n\r\n// Provider will be exported wrapped in ConfigProvider component.\r\nfunction ContextProvider(props) {\r\n  const [profile, setProfile] = useState({});\r\n  return (\r\n    <context.Provider\r\n      value={{\r\n        profile: profile,\r\n        setProfile: setProfile\r\n      }}\r\n    >\r\n      {props.children}\r\n    </context.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider };\r\nexport default context;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport history from './history';\r\nimport Dashboard from './layout/Dashboard';\r\n// import { Test } from './Test';\r\nimport LandingPage from './layout/LandingPage';\r\nimport { Route } from \"react-router-dom\";\r\nimport { ContextProvider } from './Context';\r\n\r\nexport default function App() {\r\n  return (\r\n    <ContextProvider>\r\n      <Router history={history}>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n      </Router>\r\n    </ContextProvider>\r\n  );\r\n}"],"sourceRoot":""}