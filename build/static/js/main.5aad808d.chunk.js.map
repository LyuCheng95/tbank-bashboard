{"version":3,"sources":["assets/landing-bg.jpg","history.js","pages/Recommender.jsx","components/ProfileTabPanel.jsx","tBankApi.jsx","pages/Profile.jsx","pages/Loan.jsx","components/OTPLoginDialog.jsx","components/RegisterDialog.jsx","components/LogoutDialog.jsx","components/Header.jsx","layout/Dashboard.jsx","components/Parallax.jsx","layout/LandingPage.jsx","Context.jsx","serviceWorker.js","index.js","App.js"],"names":["module","exports","createBrowserHistory","Recommender","TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","width","marginRight","marginLeft","marginTop","swipeableViews","height","ProfileTabPanel","classes","useTheme","React","useState","setValue","gridTextField","label","icon","Grid","container","direction","alignItems","item","xs","TextField","className","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","aria-label","Tab","axis","onChangeIndex","dir","spacing","justify","serverEndPoint","introCard","overflow","borderRadius","avatar","transform","margin","fontSize","borderStyle","borderWidth","name","fontFamily","textAlign","occupation","fontWeight","Profile","profile","JSON","parse","sessionStorage","getItem","useEffect","CustomSymbol","size","borderColor","fill","r","strokeWidth","stroke","fillOpacity","data","map","acc","mon","x","Year_Month","y","parseInt","Balance","Card","top","right","bottom","left","animate","enableSlices","curve","xScale","type","format","precision","xFormat","yScale","axisLeft","legend","legendOffset","axisBottom","tickValues","from","modifiers","slice","style","padding","border","points","point","key","serieColor","serieId","substr","length","xFormatted","yFormatted","balanceLineChart","Avatar","givenName","charAt","familyName","toUpperCase","Loan","marginBottom","display","flexDirection","secondary","main","form","submit","closeButton","grey","outline","links","cursor","textDecoration","failureAlert","opt","OTPLoginDialog","open","handleClose","setOpenSuccessAlert","handleOpenRegister","setLogin","setSuccessAlert","username","setUsername","password","setPassword","OTP","setOTP","setFailureAlert","history","useHistory","setTimeout","handleLogin","p1","userID","PIN","a","async","headerStr","stringify","serviceName","axios","post","response","getCustomerDetails","then","Content","ServiceResponse","ServiceRespHeader","ErrorText","setItem","CDMCustomer","customer","customerID","p2","getCustomerAccounts","accountPromises","AccountList","account","accountID","numMonths","contentStr","getMonthlyBalanceTrend","balanceResponse","balances","TrendData","MonthEndBalance","push","CurrentMonth","Promise","all","values","obj","toString","location","pathname","handleOTP","requestOTP","ErrorDetails","toLowerCase","Dialog","DialogTitle","IconButton","onClick","Container","maxWidth","required","fullWidth","autoComplete","autoFocus","e","target","Button","disabled","Alert","severity","RegisterDialog","handleOpenLogin","repeatPassword","setRepeatPassword","error","setError","logoutDialogTitle","LogoutDialog","openLogoutDialog","onClose","setOpenLogoutDialog","DialogContent","DialogContentText","DialogActions","handleLogout","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","fixedHeight","headerButton","appBarLanding","transparent","Header","landing","login","handleOpenLoginDialog","setOpen","showOnScroll","show","setShow","handleDrawerOpen","window","addEventListener","handleShow","removeEventListener","pageYOffset","appBarClasses","classNames","Toolbar","edge","clsx","noWrap","usernameDiv","Dashboard","showLoginDialog","setShowLoginDialog","showRegisterDialog","setShowRegisterDialog","openSuccessAlert","successAlert","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","exact","path","render","Snackbar","autoHideDuration","clear","parallax","maxHeight","backgroundPosition","backgroundSize","filter","small","Parallax","windowScrollTop","innerWidth","setTransform","resetTransform","image","parallaxClasses","undefined","backgroundImage","paddingLeft","minHeight","subtitle","mainRaised","boxShadow","placeholder","startButton","LandingPage","require","sm","md","context","createContext","ContextProvider","setProfile","Provider","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5aad808d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing-bg.df8fd3ef.jpg\";","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nexport default function Recommender(){\r\n    return (<div>Recommender</div>)\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport InsertComment from '@material-ui/icons/InsertComment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport WCIcon from '@material-ui/icons/Wc';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    marginTop: '-10px'\r\n  },\r\n  swipeableViews:{\r\n    height: '290px'\r\n  }\r\n}));\r\n\r\nexport default function ProfileTabPanel() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n  const gridTextField = (label, value, icon) => {\r\n    return (\r\n      <Grid container direction='row' alignItems='flex-end'>\r\n        <Grid item xs={2}>\r\n          {icon}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            value={value}\r\n            id=\"input-with-icon-grid\"\r\n            label={label}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"icon label tabs example\"\r\n        >\r\n          <Tab icon={<AssignmentIndIcon />} label=\"Personal Info\" {...a11yProps(0)} />\r\n          <Tab icon={<InsertComment />} label=\"Contact\" {...a11yProps(1)} />\r\n          <Tab icon={<HomeIcon />} label=\"Address\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n        className={classes.swipeableViews}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={5}>\r\n            <Grid item >\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Gender', 'Male', <WCIcon />)}\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Occupation', 'Student', <WorkIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Nationality', 'Chinese', <FaceIcon />)}\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Ethnic Group', 'Chinese', <SupervisorAccountIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Date of Birth', '03/18/95', <EventIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={2} alignItems=\"center\">\r\n            <Grid item >\r\n              {gridTextField('Local Number', '93411789', <PhoneIcon/>)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Country Code', '+65', <DialpadIcon/>)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Email', 'lyuch000@gmail.com', <EmailIcon/>)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Fax', '', <PrintIcon/>)}\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={2} alignItems=\"center\">\r\n            <Grid item >\r\n              {gridTextField('Address', 'Li Hwan', <BusinessIcon/>)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Address', 'Terrace', <BusinessIcon/>)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Country', 'Singapore', <PlaceIcon/>)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Postal Code', '556980', <EmailIcon/>)}\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}","import axios from 'axios';\r\nconst serverEndPoint = 'http://tbankonline.com/SMUtBank_API/Gateway?';\r\nconst requestOTP = async (userID, PIN) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"requestOTP\", userID: userID, PIN: PIN });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getCustomerDetails = async (userID, PIN, OTP) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getCustomerDetails\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getMonthlyBalanceTrend = async (userID, PIN, OTP, accountID, numMonths) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getMonthlyBalanceTrend\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ accountID: accountID, numMonths: numMonths });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n}\r\n\r\nconst getCustomerAccounts = async (userID, PIN, OTP) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getCustomerAccounts\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n}\r\n\r\nexport { requestOTP, getCustomerDetails, getMonthlyBalanceTrend, getCustomerAccounts };","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProfileTabPanel from '../components/ProfileTabPanel';\r\nimport { getMonthlyBalanceTrend } from '../tBankApi';\r\nimport { ResponsiveLine } from '@nivo/line'\r\nconst useStyles = makeStyles(theme => ({\r\n  introCard: {\r\n    marginTop: '80px',\r\n    overflow: 'visible',\r\n    borderRadius: '40px'\r\n  },\r\n  avatar: {\r\n    transform: 'translateY(-70px)',\r\n    margin: '0 auto',\r\n    height: '150px',\r\n    width: '150px',\r\n    fontSize: '80px',\r\n    borderStyle: 'double',\r\n    borderWidth: '5px'\r\n  },\r\n  name: {\r\n    fontFamily: 'Roboto Slab',\r\n    textAlign: 'center',\r\n    color: '#555',\r\n    transform: 'translateY(-50px)',\r\n  },\r\n  occupation: {\r\n    fontSize: '0.75rem',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#777',\r\n    transform: 'translateY(-43px)'\r\n  },\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const profile = JSON.parse(sessionStorage.getItem('profile'));\r\n  const [balanceHistory, setBalanceHistory] = useState([])\r\n  useEffect(() => {\r\n    const userID = sessionStorage.getItem('username');\r\n    const PIN = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    const accountID = sessionStorage.getItem('accountID');\r\n  }, []);\r\n  const CustomSymbol = ({ size, color, borderWidth, borderColor }) => (\r\n    <g>\r\n      <circle fill=\"#fff\" r={size / 2} strokeWidth={borderWidth} stroke={borderColor} />\r\n      <circle\r\n        r={size / 5}\r\n        strokeWidth={borderWidth}\r\n        stroke={borderColor}\r\n        fill={color}\r\n        fillOpacity={0.35}\r\n      />\r\n    </g>\r\n  );\r\n  let data = JSON.parse(sessionStorage.getItem('balanceHistory'))['balance'];\r\n  data = data.map(acc => ({\r\n    id: acc.id,\r\n    data: acc.data.map(mon => ({\r\n      x: mon.Year_Month,\r\n      y: parseInt(mon.Balance)\r\n    }))\r\n  }));\r\n  const balanceLineChart = data => {\r\n    return (\r\n      <ResponsiveLine\r\n        width={500}\r\n        height={500}\r\n        margin={{ top: 90, right: 20, bottom: 10, left: 80 }}\r\n        animate={true}\r\n        enableSlices={'x'}\r\n        curve=\"monotoneX\"\r\n        data={data}\r\n        xScale={{\r\n          type: 'time',\r\n          format: '%Y-%m-%d',\r\n          precision: 'day',\r\n        }}\r\n        xFormat=\"time:%Y-%m-%d\"\r\n        yScale={{\r\n          type: 'linear',\r\n        }}\r\n        axisLeft={{\r\n          legend: 'SGD',\r\n          legendOffset: 12,\r\n        }}\r\n        axisBottom={{\r\n          format: '%b %d',\r\n          tickValues: 'every 2 days',\r\n          legend: 'Time',\r\n          legendOffset: -12,\r\n        }}\r\n        curve='monotoneX'\r\n        enablePointLabel={true}\r\n        pointSymbol={CustomSymbol}\r\n        pointSize={16}\r\n        pointBorderWidth={1}\r\n        pointBorderColor={{\r\n          from: 'color',\r\n          modifiers: [['darker', 0.3]],\r\n        }}\r\n        useMesh={true}\r\n        enableSlices={'x'}\r\n        sliceTooltip={({ slice }) => (\r\n          <div\r\n            style={{\r\n              background: 'white',\r\n              padding: '9px 12px',\r\n              border: '1px solid #ccc',\r\n            }}\r\n          >\r\n            {slice.points.map(point => {\r\n              return (\r\n                <div\r\n                  key={point.id}\r\n                  style={{\r\n                    color: point.serieColor,\r\n                    padding: '3px 0',\r\n                  }}\r\n                >\r\n                  <strong>\r\n                    Account:\r\n                  </strong>\r\n                  <strong>\r\n                    {point.serieId.substr(point.serieId.length - 4)}\r\n                  </strong>\r\n                  <br />\r\n                  Time:\r\n                  {point.data.xFormatted}\r\n                  <br />\r\n                  balance:\r\n                  ${point.data.yFormatted}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      />\r\n    )\r\n  };\r\n  return (\r\n    <Card className={classes.introCard}>\r\n      <Grid container direction=\"row\">\r\n        <Grid item xs={6}>\r\n          {balanceLineChart(data)}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container direction=\"column\" >\r\n            <Grid item>\r\n              <Avatar className={classes.avatar}>\r\n                {profile.givenName.charAt(0) + profile.familyName.charAt(0)}\r\n              </Avatar>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.name} variant={'h5'}>\r\n                {profile.givenName + ' ' + profile.familyName}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.occupation} >\r\n                {profile.profile.occupation.toUpperCase()}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <ProfileTabPanel />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nexport default function Loan(){\r\n    return (<div>Loan</div>)\r\n}","import React, { Component, useState, useEffect, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { requestOTP, getCustomerDetails, getCustomerAccounts, getMonthlyBalanceTrend } from '../tBankApi';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  },\r\n  container: {\r\n    width: '400px',\r\n  },\r\n  opt: {\r\n    margin: '20% 10%',\r\n    height: '60%',\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nexport default function OTPLoginDialog({\r\n  open,\r\n  handleClose,\r\n  handleOpenRegister,\r\n  setOpenSuccessAlert,\r\n  setLogin,\r\n  setSuccessAlert }) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [OTP, setOTP] = useState(\"\");\r\n  const [failureAlert, setFailureAlert] = useState(null);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (failureAlert) {\r\n      setTimeout(() => { setFailureAlert(null) }, 10000);\r\n    }\r\n  }, [failureAlert])\r\n  // const handleClickRegister = () => {\r\n  //   handleClose();\r\n  //   handleOpenRegister();\r\n  // };\r\n  const handleLogin = (username, password) => {\r\n    const p1 = getCustomerDetails(username, password, OTP).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        sessionStorage.setItem('username', username);\r\n        sessionStorage.setItem('password', password);\r\n        sessionStorage.setItem('customerID', response.CDMCustomer.customer.customerID);\r\n        sessionStorage.setItem('profile', JSON.stringify(response.CDMCustomer));\r\n        sessionStorage.setItem('OTP', OTP);\r\n        handleClose();\r\n        setLogin(true);\r\n        setSuccessAlert('Login Successful!');\r\n        setOpenSuccessAlert(true);\r\n      } else {\r\n        setFailureAlert('Invalid username/password/OTP');\r\n      }\r\n    });\r\n    const p2 = getCustomerAccounts(username, password, OTP).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        const accountPromises = response.AccountList.account.map(account => {\r\n          if (account.accountID) {\r\n            return getMonthlyBalanceTrend(username, password, OTP, account.accountID, 6).then(data => {\r\n              const balanceResponse = data.Content.ServiceResponse;\r\n              if (balanceResponse.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n                let balances = balanceResponse.TrendData.MonthEndBalance;\r\n                balances.push(balanceResponse.TrendData.CurrentMonth);\r\n                return { id: account.accountID, data: balances };\r\n              }\r\n            })\r\n          }\r\n        });\r\n        return Promise.all(accountPromises).then(values => {\r\n          sessionStorage.setItem('balanceHistory', '{\"balance\": [' + values.map(obj => JSON.stringify(obj)).toString() + ']}');\r\n        })\r\n      }\r\n    });\r\n    Promise.all([p1, p2]).then(() => {\r\n      if (history.location.pathname !== '/dashboard') {\r\n        history.push('/dashboard');\r\n      }\r\n    })\r\n  }\r\n  const handleOTP = (username, password) => {\r\n    requestOTP(username, password).then(data => {\r\n      if (data.Content.ServiceResponse.ServiceRespHeader.ErrorDetails.toLowerCase() === 'success') {\r\n        setSuccessAlert('OTP sent!');\r\n        setOpenSuccessAlert(true);\r\n      } else {\r\n        setFailureAlert('Invalid username/password');\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} >\r\n        <DialogTitle>\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Login\r\n            </Typography>\r\n            <Grid container direction='column'>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"usename\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  onChange={e => setUsername(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction='row'>\r\n                  <Grid item>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"otp\"\r\n                      label=\"OTP\"\r\n                      type=\"otp\"\r\n                      id=\"otp\"\r\n                      autoComplete=\"\"\r\n                      onChange={e => setOTP(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      disabled={!username || !password}\r\n                      color='secondary'\r\n                      variant='contained'\r\n                      className={classes.opt}\r\n                      onClick={() => handleOTP(username, password)}\r\n                    >\r\n                      Get OTP\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {failureAlert ? (\r\n              <Alert className={classes.failureAlert} severity=\"error\">\r\n                {failureAlert}\r\n              </Alert>\r\n            ) : null}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleLogin(username, password)}\r\n            >\r\n              Login\r\n            </Button>\r\n            {/* <Typography\r\n              onClick={handleClickRegister}\r\n              className={classes.links}\r\n            >\r\n              {\"Don't have an account? Register>>\"}\r\n            </Typography> */}\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React, { Component, useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import { register } from '../api';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  container: {\r\n    width: '500px'\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  }\r\n}));\r\n\r\nexport default function RegisterDialog({\r\n  open,\r\n  handleClose,\r\n  handleOpenLogin,\r\n  setOpenSuccessAlert,\r\n  setLogin,\r\n  setSuccessAlert }) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [failureAlert, setFailureAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (repeatPassword == password) {\r\n      setError(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  },[repeatPassword]);\r\n  const handleRegister = (username, password) => {\r\n    // register(username, password).then(response => {\r\n    //   if (response.data.status == 0) {\r\n    //     setFailureAlert(true)\r\n    //   } else {\r\n    //     sessionStorage.setItem('username', username)\r\n    //     handleClose();\r\n    //     setOpenSuccessAlert(true);\r\n    //     setLogin(true)\r\n    //     setSuccessAlert('Registeration Successful');\r\n    //     if (history.location.pathname !== '/dashboard') {\r\n    //       history.push('/dashboard');\r\n    //     }\r\n    //   }\r\n    // });\r\n  }\r\n  const handleClickLogin = () => {\r\n    handleClose();\r\n    handleOpenLogin();\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} >\r\n        <DialogTitle>\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"username\"\r\n              name=\"email\"\r\n              autoComplete=\"xxx@xxx.com\"\r\n              autoFocus\r\n              onChange={e => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              error={error}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"repeat password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setRepeatPassword(e.target.value)}\r\n            />\r\n            {failureAlert ? (\r\n              <Alert className={classes.failureAlert} severity=\"error\">\r\n                Registration Failed\r\n              </Alert>\r\n            ) : null}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleRegister(username, password)}\r\n            >\r\n              Register\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Typography\r\n                  onClick={handleClickLogin}\r\n                  className={classes.links}\r\n                >\r\n                  Already have an account? Login >>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  logoutDialogTitle: {\r\n    backgroundColor: '#3f51b5',\r\n    color: '#FFFFFF',\r\n  }\r\n}));\r\n\r\nexport default function LogoutDialog(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog\r\n      open={props.openLogoutDialog}\r\n      onClose={() => props.setOpenLogoutDialog(false)}\r\n    >\r\n      <DialogTitle className={classes.logoutDialogTitle}>{\"Logout\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Do you want to logout?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpenLogoutDialog(false)} variant='contained' color=\"primary\">\r\n          No\r\n        </Button>\r\n        <Button onClick={props.handleLogout} color=\"secondary\" variant='contained' autoFocus>\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport classNames from 'classnames';\r\n\r\nconst drawerWidth = 240\r\n// core components\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    '&$focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: '64px',\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  headerButton: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  logoutDialogTitle: {\r\n    backgroundColor: '#3f51b5',\r\n    color: '#FFFFFF',\r\n  },\r\n  appBarLanding: {\r\n    position: 'fixed',\r\n    transition: 'height 1000ms'\r\n  },\r\n  transparent: {\r\n    backgroundColor: 'transparent',\r\n  }\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const { color, landing, login, setLogin, handleOpenLoginDialog, setOpenLogoutDialog, open, setOpen, showOnScroll } = props;\r\n  const classes = useStyles();\r\n  const [show, setShow] = useState(!landing);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (showOnScroll) {\r\n      window.addEventListener(\"scroll\", handleShow);\r\n    }\r\n    return function cleanup() {\r\n      if (showOnScroll) {\r\n        window.removeEventListener(\"scroll\", handleShow);\r\n      }\r\n    };\r\n  });\r\n  const handleShow = () => {\r\n    const { showOnScroll } = props;\r\n    const windowsScrollTop = window.pageYOffset;\r\n    if (windowsScrollTop > showOnScroll.height) {\r\n      setShow(true);\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n  const appBarClasses = classNames({\r\n    [classes.transparent]: !show,\r\n    [classes.appBar]: true,\r\n    [classes.appBarShift]: open,\r\n    [classes.appBarLanding]: landing\r\n  });\r\n  const render = () => {\r\n    return (\r\n      <AppBar position=\"absolute\" className={appBarClasses}>\r\n        <Toolbar className={classes.toolbar}>\r\n          {landing ? null : (\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n          )}\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            IS444\r\n          </Typography>\r\n          {login ? (\r\n            <>\r\n              <div className={classes.usernameDiv}>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                  {sessionStorage.getItem('username').length > 15 ? (\r\n                    sessionStorage.getItem('username').slice(0, 13) + '...'\r\n                  ) : (sessionStorage.getItem('username'))}\r\n                </Typography>\r\n              </div>\r\n              <IconButton color=\"inherit\"\r\n                className={classes.headerButton}\r\n                onClick={() => setOpenLogoutDialog(true)}\r\n              >\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n              <IconButton color=\"inherit\"\r\n                className={classes.headerButton}\r\n                onClick={() => handleOpenLoginDialog(true)}\r\n              >\r\n                <PersonIcon />\r\n              </IconButton>\r\n            )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n  return render();\r\n}","\r\nimport React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport { useHistory, Route, Switch } from \"react-router-dom\";\r\nimport Recommender from '../pages/Recommender';\r\nimport Profile from '../pages/Profile';\r\nimport Loan from '../pages/Loan';\r\nimport OTPLoginDialog from '../components/OTPLoginDialog';\r\nimport RegisterDialog from '../components/RegisterDialog';\r\nimport LogoutDialog from '../components/LogoutDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useEffect } from 'react';\r\nimport Header from '../components/Header';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    overflow: 'hidden',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    backgroundColor: '#f0efea',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    '&$focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: '64px',\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  headerButton: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showLoginDialog, setShowLoginDialog] = React.useState(false);\r\n  const [showRegisterDialog, setShowRegisterDialog] = React.useState(false);\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const [login, setLogin] = React.useState(sessionStorage.getItem('username'));\r\n  const [openLogoutDialog, setOpenLogoutDialog] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenLoginDialog = () => {\r\n    setShowLoginDialog(true);\r\n  };\r\n  const handleLogout = () => {\r\n    setOpenLogoutDialog(false);\r\n    setLogin(false);\r\n    history.push('/');\r\n    sessionStorage.clear()\r\n  };\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem('username')) {\r\n      setLogin(true);\r\n    } else {\r\n      setLogin(false);\r\n    }\r\n  }, []);\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header\r\n        login={login}\r\n        setLogin={setLogin}\r\n        handleOpenLoginDialog={handleOpenLoginDialog}\r\n        setOpenLogoutDialog={setOpenLogoutDialog}\r\n        open={open}\r\n        setOpen={setOpen}\r\n      />\r\n      <OTPLoginDialog\r\n        open={showLoginDialog}\r\n        handleClose={() => setShowLoginDialog(false)}\r\n        handleOpenRegister={() => setShowRegisterDialog(true)}\r\n        setLogin={() => setLogin(true)}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      <RegisterDialog\r\n        open={showRegisterDialog}\r\n        handleClose={() => setShowRegisterDialog(false)}\r\n        handleOpenLogin={() => setShowLoginDialog(true)}\r\n        setLogin={() => setLogin(true)}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push('/dashboard')} >\r\n            <ListItemIcon>\r\n              <PermContactCalendarIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Profile\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/dashboard/recommender')}>\r\n            <ListItemIcon>\r\n              <ThumbUpAltIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Recommender\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/dashboard/loan')}>\r\n            <ListItemIcon>\r\n              <LocalAtmIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Loan\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Route exact path=\"/dashboard\" component={Profile} />\r\n          <Route path=\"/dashboard/recommender\" render={Recommender} />\r\n          <Route path=\"/dashboard/loan\" render={Loan} />\r\n        </Container>\r\n        <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n          <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n            {successAlert}\r\n          </Alert>\r\n        </Snackbar>\r\n        <LogoutDialog\r\n          setOpenLogoutDialog={setOpenLogoutDialog}\r\n          handleLogout={handleLogout}\r\n          openLogoutDialog={openLogoutDialog}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// core components\r\nconst useStyles = makeStyles(theme=>({\r\n  parallax: {\r\n    height: \"90vh\",\r\n    maxHeight: \"1000px\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    border: \"0\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  filter: {\r\n    \"&:before\": {\r\n      background: \"rgba(0, 0, 0, 0.5)\"\r\n    },\r\n    \"&:after,&:before\": {\r\n      position: \"absolute\",\r\n      zIndex: \"1\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"block\",\r\n      left: \"0\",\r\n      top: \"0\",\r\n      content: \"''\"\r\n    }\r\n  },\r\n  small: {\r\n    height: \"380px\"\r\n  }\r\n}));\r\n\r\nexport default function Parallax(props) {\r\n  const classes = useStyles();\r\n  let windowScrollTop;\r\n  if (window.innerWidth >= 768) {\r\n    windowScrollTop = window.pageYOffset / 3;\r\n  } else {\r\n    windowScrollTop = 0;\r\n  }\r\n  const [transform, setTransform] = React.useState(\r\n    \"translate3d(0,\" + windowScrollTop + \"px,0)\"\r\n  );\r\n  React.useEffect(() => {\r\n    if (window.innerWidth >= 768) {\r\n      window.addEventListener(\"scroll\", resetTransform);\r\n    }\r\n    return function cleanup() {\r\n      if (window.innerWidth >= 768) {\r\n        window.removeEventListener(\"scroll\", resetTransform);\r\n      }\r\n    };\r\n  });\r\n  const resetTransform = () => {\r\n    var windowScrollTop = window.pageYOffset / 3;\r\n    setTransform(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\r\n  };\r\n  const { filter, className, children, style, image, small } = props;\r\n  const parallaxClasses = classNames({\r\n    [classes.parallax]: true,\r\n    [classes.filter]: filter,\r\n    [classes.small]: small,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div\r\n      className={parallaxClasses}\r\n      style={{\r\n        ...style,\r\n        backgroundImage: \"url(\" + image + \")\",\r\n        transform: transform\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nParallax.propTypes = {\r\n  className: PropTypes.string,\r\n  filter: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  style: PropTypes.string,\r\n  image: PropTypes.string,\r\n  small: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\n\r\n// core components\r\n// import Header from \"components/Header/Header.js\";\r\n// import Footer from \"components/Footer/Footer.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import HeaderLinks from \"components/Header/HeaderLinks.js\";\r\nimport Parallax from \"../components/Parallax.jsx\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Header from '../components/Header';\r\nimport OTPLoginDialog from '../components/OTPLoginDialog';\r\n// import RegisterDialog from '../components/RegisterDialog';\r\nimport LogoutDialog from '../components/LogoutDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    zIndex: \"12\",\r\n    color: \"#FFFFFF\",\r\n    paddingRight: \"60px\",\r\n    paddingLeft: \"60px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    // ...title,\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n    minHeight: \"32px\",\r\n    color: \"#FFFFFF\",\r\n    textDecoration: \"none\"\r\n  },\r\n  subtitle: {\r\n    fontSize: \"1.313rem\",\r\n    maxWidth: \"500px\",\r\n    margin: \"10px auto 0\"\r\n  },\r\n  main: {\r\n    background: \"#FFFFFF\",\r\n    position: \"relative\",\r\n    zIndex: \"3\"\r\n  },\r\n  mainRaised: {\r\n    margin: \"-60px 30px 0px\",\r\n    borderRadius: \"6px\",\r\n    boxShadow:\r\n      \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\r\n  },\r\n  placeholder: {\r\n    height: '1000px'\r\n  },\r\n  startButton: {\r\n    height: '50px'\r\n  }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n  const classes = useStyles();\r\n  const { ...rest } = props;\r\n  const [showLoginDialog, setShowLoginDialog] = React.useState(false);\r\n  const [showRegisterDialog, setShowRegisterDialog] = React.useState(false);\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const [login, setLogin] = React.useState(sessionStorage.getItem('username'));\r\n  const [openLogoutDialog, setOpenLogoutDialog] = React.useState(false);\r\n  const history = useHistory();\r\n  const handleLogout = () => {\r\n    setOpenLogoutDialog(false);\r\n    setLogin(false);\r\n    history.push('/');\r\n    sessionStorage.clear()\r\n  };\r\n  return (\r\n    <div>\r\n      <Header\r\n        landing\r\n        showOnScroll={{\r\n          height: 550,\r\n        }}\r\n        handleOpenLoginDialog={() => setShowLoginDialog(true)}\r\n        login={login}\r\n        setLogin={setLogin}\r\n        setOpenLogoutDialog = {() => setOpenLogoutDialog(true)}\r\n      />\r\n      <Parallax filter image={require(\"../assets/landing-bg.jpg\")}>\r\n        <div className={classes.container}>\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n              <h1 className={classes.title}>Your Personalised Recommender</h1>\r\n              <h4>\r\n                texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext\r\n              </h4>\r\n              <br />\r\n              <Button\r\n                className={classes.startButton}\r\n                variant='contained'\r\n                color='secondary'\r\n                onClick={() => setShowLoginDialog(true)}\r\n              >\r\n                <Typography variant='h6'>\r\n                  Get Started\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Parallax>\r\n      <div className={classNames(classes.main, classes.mainRaised)}>\r\n        <div className={classes.container}>\r\n          <div className={classes.placeholder} />\r\n        </div>\r\n      </div>\r\n      <OTPLoginDialog\r\n        open={showLoginDialog}\r\n        handleClose={() => setShowLoginDialog(false)}\r\n        handleOpenRegister={() => setShowRegisterDialog(true)}\r\n        setLogin={() => null}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      {/* <RegisterDialog\r\n        open={showRegisterDialog}\r\n        handleClose={() => setShowRegisterDialog(false)}\r\n        handleOpenLogin={() => setShowLoginDialog(true)}\r\n        setLogin={() => null}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      /> */}\r\n      <LogoutDialog\r\n        setOpenLogoutDialog={setOpenLogoutDialog}\r\n        handleLogout={handleLogout}\r\n        openLogoutDialog={openLogoutDialog}\r\n      />\r\n      <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n        <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n          {successAlert}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\n// Provider and Consumer are connected through their \"parent\" context\r\nconst context = createContext();\r\n\r\n// Provider will be exported wrapped in ConfigProvider component.\r\nfunction ContextProvider(props) {\r\n  const [profile, setProfile] = useState({});\r\n  return (\r\n    <context.Provider\r\n      value={{\r\n        profile: profile,\r\n        setProfile: setProfile\r\n      }}\r\n    >\r\n      {props.children}\r\n    </context.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider };\r\nexport default context;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport history from './history';\r\nimport Dashboard from './layout/Dashboard';\r\n// import { Test } from './Test';\r\nimport LandingPage from './layout/LandingPage';\r\nimport { Route } from \"react-router-dom\";\r\nimport { ContextProvider } from './Context';\r\n\r\nexport default function App() {\r\n  return (\r\n    <ContextProvider>\r\n      <Router history={history}>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n      </Router>\r\n    </ContextProvider>\r\n  );\r\n}"],"sourceRoot":""}