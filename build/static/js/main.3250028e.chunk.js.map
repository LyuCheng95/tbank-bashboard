{"version":3,"sources":["assets/LoanService.jpg","assets/PersonalProfile.jpg","assets/RecommendationEngine.jpg","assets/landing-bg.jpg","history.js","pages/Recommender.jsx","components/ProfileTabPanel.jsx","pages/Profile.jsx","tBankApi.jsx","components/LoanApplicationPanel.jsx","components/LoanRepaymentPanel.jsx","components/OTPDialog.jsx","pages/Loan.jsx","pages/Loading.jsx","components/OTPLoginDialog.jsx","components/RegisterDialog.jsx","components/LogoutDialog.jsx","components/Header.jsx","layout/Dashboard.jsx","components/Parallax.jsx","layout/LandingPage.jsx","Context.jsx","serviceWorker.js","index.js","App.js"],"names":["module","exports","createBrowserHistory","Recommender","TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","width","marginRight","marginLeft","marginTop","swipeableViews","height","ProfileTabPanel","classes","useTheme","React","useState","setValue","gridTextField","label","icon","Grid","container","direction","alignItems","item","xs","TextField","className","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","aria-label","Tab","axis","onChangeIndex","dir","spacing","justify","introCard","overflow","borderRadius","avatar","transform","margin","fontSize","borderStyle","borderWidth","name","fontFamily","textAlign","occupation","fontWeight","graphTitle","marginBottom","Profile","profile","JSON","parse","sessionStorage","getItem","useEffect","CustomSymbol","size","borderColor","fill","r","strokeWidth","stroke","fillOpacity","data","map","acc","mon","x","Year_Month","y","parseInt","Balance","Card","top","right","bottom","left","animate","enableSlices","curve","xScale","type","format","precision","xFormat","yScale","axisLeft","legend","legendOffset","axisBottom","tickValues","from","modifiers","slice","style","padding","border","points","point","key","serieColor","serieId","substr","length","xFormatted","yFormatted","balanceLineChart","Avatar","givenName","charAt","familyName","toUpperCase","serverEndPoint","formControl","loanSelect","selectEmpty","loanTypeItem","textField","detailsContainer","boxShadow","applyItem","applyButton","calculateInstallmentButton","LoanApplicationPanel","loanType","setLoanType","loanInfo","setLoanInfo","period","setPeriod","amount","setAmount","interest","setInterest","loanTitle","setLoanTitle","loanPurpose","setLoanPurpose","collateralAssetValue","setCollateralAssetValue","settlementAccount","setSettlementAccount","monthlyInstallment","setMonthlyInstallment","maturityDate","setMaturityDate","openSuccessAlert","setOpenSuccessAlert","successAlert","setSuccessAlert","detailsRef","useRef","accountsRef","placeHolder","ProductName","MinOpeningBalance","PenaltyRate","RepaymentPenaltyThreshold","InterestRate","ltvRef","disabled","Product","push","current","filter","loan","handleCalculateInstallment","username","password","OTP","productID","ProductID","userID","PIN","principle","numberOfMonths","a","async","headerStr","stringify","serviceName","contentStr","axios","post","response","calculateLoanInstallment","then","Content","ServiceResponse","ServiceRespHeader","ErrorText","installment","InstallmentResponse","Interest","MaturityDate","MonthlyInstallment","setOTPDialogOpen","handleApply","currency","account","accountID","loanAmount","assetValue","title","applyForLoan","console","log","FormControl","InputLabel","Select","labelWidth","e","v","target","MaxLtvRatio","MenuItem","error","helperText","Button","onClick","InputProps","readOnly","Snackbar","open","autoHideDuration","onClose","Alert","severity","minWidth","calculateButton","LoanRepaymentPanel","repaymentType","setRepaymentType","setAccount","keepMaturity","setKeepMaturity","calculationResult","setCalculationResult","loanAccountsRef","currentStatus","handleCalculate","calculateFullLoanRepayment","result","Object","entries","FullRepaymentResponse","reduce","rows","FormControlLabel","control","Switch","checked","labelPlacement","row","replace","display","flexDirection","secondary","main","form","submit","closeButton","grey","outline","links","cursor","textDecoration","failureAlert","opt","OTPDialog","handleClose","setOTP","Dialog","DialogTitle","IconButton","Container","maxWidth","required","fullWidth","autoComplete","setItem","loanCard","tabs","Loan","OTPDialogOpen","scrollButtons","Loading","history","useHistory","getCustomerDetailsPromise","getCustomerDetails","CDMCustomer","customer","customerID","getAllProductDetailsPromise","bankID","getAllProductDetails","getCustomerAccountsPromise","getCustomerAccounts","AccountList","accountPromises","numMonths","getMonthlyBalanceTrend","balanceResponse","balances","TrendData","MonthEndBalance","CurrentMonth","Promise","all","values","obj","toString","location","pathname","LinearProgress","OTPLoginDialog","handleOpenRegister","setLogin","setUsername","setPassword","setFailureAlert","setTimeout","handleLogin","loginCustomer","ErrorDetails","handleOTP","requestOTP","toLowerCase","autoFocus","RegisterDialog","handleOpenLogin","repeatPassword","setRepeatPassword","setError","logoutDialogTitle","LogoutDialog","openLogoutDialog","setOpenLogoutDialog","DialogContent","DialogContentText","DialogActions","handleLogout","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","fixedHeight","headerButton","appBarLanding","transparent","Header","landing","login","handleOpenLoginDialog","setOpen","showOnScroll","show","setShow","handleDrawerOpen","window","addEventListener","handleShow","removeEventListener","pageYOffset","appBarClasses","classNames","Toolbar","edge","clsx","noWrap","usernameDiv","Dashboard","showLoginDialog","setShowLoginDialog","showRegisterDialog","setShowRegisterDialog","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","exact","path","clear","parallax","maxHeight","backgroundPosition","backgroundSize","small","Parallax","windowScrollTop","innerWidth","setTransform","resetTransform","image","parallaxClasses","undefined","backgroundImage","infoContainer","minHeight","subtitle","mainRaised","placeholder","startButton","titleContainer","featureBox","opacity","featurePicture","textBox","text","whiteBox","LandingPage","require","sm","md","src","PersonalProfile","RecommendationEngine","LoanService","context","createContext","ContextProvider","setProfile","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3250028e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LoanService.ad3b0fcf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PersonalProfile.7d2c90d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RecommendationEngine.12388174.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landing-bg.df8fd3ef.jpg\";","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nexport default function Recommender(){\r\n    return (<div>Recommender</div>)\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport InsertComment from '@material-ui/icons/InsertComment';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport WCIcon from '@material-ui/icons/Wc';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    marginTop: '-10px'\r\n  },\r\n  swipeableViews: {\r\n    height: '290px'\r\n  }\r\n}));\r\n\r\nexport default function ProfileTabPanel() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n  const gridTextField = (label, value, icon) => {\r\n    return (\r\n      <Grid container direction='row' alignItems='flex-end'>\r\n        <Grid item xs={2}>\r\n          {icon}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            value={value}\r\n            id=\"input-with-icon-grid\"\r\n            label={label}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"icon label tabs example\"\r\n        >\r\n          <Tab icon={<AssignmentIndIcon />} label=\"Personal Info\" {...a11yProps(0)} />\r\n          <Tab icon={<InsertComment />} label=\"Contact\" {...a11yProps(1)} />\r\n          <Tab icon={<HomeIcon />} label=\"Address\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n        className={classes.swipeableViews}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={5}>\r\n            <Grid item >\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Gender', 'Male', <WCIcon />)}\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Occupation', 'Student', <WorkIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Nationality', 'Chinese', <FaceIcon />)}\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Ethnic Group', 'Chinese', <SupervisorAccountIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction='row' justify='space-around'>\r\n                <Grid item xs={5}>\r\n                  {gridTextField('Date of Birth', '03/18/95', <EventIcon />)}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={2} alignItems=\"center\">\r\n            <Grid item >\r\n              {gridTextField('Local Number', '93411789', <PhoneIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Country Code', '+65', <DialpadIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Email', 'lyuch000@gmail.com', <EmailIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Fax', '', <PrintIcon />)}\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <Grid container direction='column' spacing={2} alignItems=\"center\">\r\n            <Grid item >\r\n              {gridTextField('Address', 'Li Hwan', <BusinessIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Address', 'Terrace', <BusinessIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Country', 'Singapore', <PlaceIcon />)}\r\n            </Grid>\r\n            <Grid item >\r\n              {gridTextField('Postal Code', '556980', <EmailIcon />)}\r\n            </Grid>\r\n          </Grid>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProfileTabPanel from '../components/ProfileTabPanel';\r\nimport { ResponsiveLine } from '@nivo/line'\r\nconst useStyles = makeStyles(theme => ({\r\n  introCard: {\r\n    marginTop: '80px',\r\n    overflow: 'visible',\r\n    borderRadius: '40px'\r\n  },\r\n  avatar: {\r\n    transform: 'translateY(-70px)',\r\n    margin: '0 auto',\r\n    height: '150px',\r\n    width: '150px',\r\n    fontSize: '80px',\r\n    borderStyle: 'double',\r\n    borderWidth: '5px'\r\n  },\r\n  name: {\r\n    fontFamily: 'Roboto Slab',\r\n    textAlign: 'center',\r\n    color: '#555',\r\n    transform: 'translateY(-50px)',\r\n  },\r\n  occupation: {\r\n    fontSize: '0.75rem',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#777',\r\n    transform: 'translateY(-43px)'\r\n  },\r\n  graphTitle:{\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Roboto Slab\",\r\n    marginTop: \"15px\",\r\n    marginBottom: \"-15px\"\r\n  }\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const profile = JSON.parse(sessionStorage.getItem('profile'));\r\n  const [balanceHistory, setBalanceHistory] = useState([])\r\n  useEffect(() => {\r\n    const userID = sessionStorage.getItem('username');\r\n    const PIN = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    const accountID = sessionStorage.getItem('accountID');\r\n  }, []);\r\n  const CustomSymbol = ({ size, color, borderWidth, borderColor }) => (\r\n    <g>\r\n      <circle fill=\"#fff\" r={size / 2} strokeWidth={borderWidth} stroke={borderColor} />\r\n      <circle\r\n        r={size / 5}\r\n        strokeWidth={borderWidth}\r\n        stroke={borderColor}\r\n        fill={color}\r\n        fillOpacity={0.35}\r\n      />\r\n    </g>\r\n  );\r\n  let data = JSON.parse(sessionStorage.getItem('balanceHistory'))['balance'];\r\n  data = data.map(acc => ({\r\n    id: acc.id,\r\n    data: acc.data.map(mon => ({\r\n      x: mon.Year_Month,\r\n      y: parseInt(mon.Balance)\r\n    }))\r\n  }));\r\n  const balanceLineChart = data => {\r\n    return (\r\n      <ResponsiveLine\r\n        width={500}\r\n        height={500}\r\n        margin={{ top: 90, right: 20, bottom: 10, left: 80 }}\r\n        animate={true}\r\n        enableSlices={'x'}\r\n        curve=\"monotoneX\"\r\n        data={data}\r\n        xScale={{\r\n          type: 'time',\r\n          format: '%Y-%m-%d',\r\n          precision: 'day',\r\n        }}\r\n        xFormat=\"time:%Y-%m-%d\"\r\n        yScale={{\r\n          type: 'linear',\r\n        }}\r\n        axisLeft={{\r\n          legend: 'SGD',\r\n          legendOffset: 12,\r\n        }}\r\n        axisBottom={{\r\n          format: '%b %d',\r\n          tickValues: 'every 2 days',\r\n          legend: 'Time',\r\n          legendOffset: -12,\r\n        }}\r\n        curve='monotoneX'\r\n        enablePointLabel={true}\r\n        pointSymbol={CustomSymbol}\r\n        pointSize={16}\r\n        pointBorderWidth={1}\r\n        pointBorderColor={{\r\n          from: 'color',\r\n          modifiers: [['darker', 0.3]],\r\n        }}\r\n        useMesh={true}\r\n        enableSlices={'x'}\r\n        sliceTooltip={({ slice }) => (\r\n          <div\r\n            style={{\r\n              background: 'white',\r\n              padding: '9px 12px',\r\n              border: '1px solid #ccc',\r\n            }}\r\n          >\r\n            {slice.points.map(point => {\r\n              return (\r\n                <div\r\n                  key={point.id}\r\n                  style={{\r\n                    color: point.serieColor,\r\n                    padding: '3px 0',\r\n                    fontSize: \"0.7rem\"\r\n                  }}\r\n                >\r\n                  <strong>\r\n                    Account:\r\n                  </strong>\r\n                  <strong>\r\n                    {point.serieId.substr(point.serieId.length - 4)}\r\n                  </strong>\r\n                  <br />\r\n                  Time:\r\n                  {point.data.xFormatted}\r\n                  <br />\r\n                  balance:\r\n                  ${point.data.yFormatted}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      />\r\n    )\r\n  };\r\n  return (\r\n    <Card className={classes.introCard}>\r\n      <Grid container direction=\"row\">\r\n        <Grid item xs={6}>\r\n          <div className={classes.graphTitle}>\r\n            Monthly balance\r\n          </div>\r\n          {balanceLineChart(data)}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container direction=\"column\" >\r\n            <Grid item>\r\n              <Avatar className={classes.avatar}>\r\n                {profile.givenName.charAt(0) + profile.familyName.charAt(0)}\r\n              </Avatar>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.name} variant={'h5'}>\r\n                {profile.givenName + ' ' + profile.familyName}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.occupation} >\r\n                {profile.profile.occupation.toUpperCase()}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <ProfileTabPanel />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nconst serverEndPoint = 'http://tbankonline.com/SMUtBank_API/Gateway?';\r\nconst requestOTP = async (userID, PIN) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"requestOTP\", userID: userID, PIN: PIN });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst loginCustomer = async (userID, PIN, OTP) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"loginCustomer\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getCustomerDetails = async (userID, PIN, OTP) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getCustomerDetails\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getMonthlyBalanceTrend = async (userID, PIN, OTP, accountID, numMonths) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getMonthlyBalanceTrend\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ accountID: accountID, numMonths: numMonths });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getCustomerAccounts = async (userID, PIN, OTP) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getCustomerAccounts\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getAllProductDetails = async (userID, PIN, OTP, bankID) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getAllProductDetails\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ Content: { \"bankID\": bankID } });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst calculateLoanInstallment = async (userID, PIN, OTP, principle, productID, numberOfMonths) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"calculateLoanInstallment\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ \"principle\": principle, \"productID\": productID, \"numberOfMonths\": numberOfMonths });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst applyForLoan = async (userID, PIN, OTP, loanAmount, loanPurpose, productID, numberOfMonths, settlementAccount, assetValue, currency, title) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"applyForLoan\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({\r\n    \"loanAmount\": loanAmount,\r\n    \"loanPurpose\": loanPurpose,\r\n    \"productID\": productID,\r\n    \"numberOfMonths\": numberOfMonths,\r\n    \"settlementAccount\": settlementAccount,\r\n    \"assetValue\": assetValue,\r\n    \"currency\": currency,\r\n    \"title\": title\r\n  });\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst getLoanAccountDetails = async (userID, PIN, OTP, accountID) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"getLoanAccountDetails\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ \"Content\": {\"accountID\": accountID}});\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\n\r\nconst calculateFullLoanRepayment = async (userID, PIN, OTP, accountID) => {\r\n  const headerStr = JSON.stringify({ serviceName: \"calculateFullLoanRepayment\", userID: userID, PIN: PIN, OTP: OTP });\r\n  const contentStr = JSON.stringify({ \"Content\": {\"accountID\": accountID}});\r\n  const response = await axios.post(serverEndPoint + \"Header=\" + headerStr + \"&Content=\" + contentStr);\r\n  const data = await response.data;\r\n  return data;\r\n};\r\nexport {\r\n  requestOTP,\r\n  loginCustomer,\r\n  getCustomerDetails,\r\n  getMonthlyBalanceTrend,\r\n  getCustomerAccounts,\r\n  getAllProductDetails,\r\n  calculateLoanInstallment,\r\n  applyForLoan,\r\n  getLoanAccountDetails,\r\n  calculateFullLoanRepayment,\r\n};","import React, { useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport { calculateLoanInstallment, applyForLoan } from '../tBankApi';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    width: '180px',\r\n  },\r\n  loanSelect: {\r\n    color: \"#3f51b5\",\r\n    fontWeight: \"500\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  loanTypeItem: {\r\n    textAlign: \"center\",\r\n  },\r\n  textField: {\r\n    width: '180px',\r\n    '& input': {\r\n      color: \"white !important\"\r\n    },\r\n    '& label': {\r\n      color: \"white !important\"\r\n    },\r\n    '& ::before': {\r\n      borderColor: \"white\"\r\n    }\r\n  },\r\n  detailsContainer: {\r\n    marginRight: \"-20px\",\r\n    marginLeft: \"-20px\",\r\n    backgroundColor: \"#6574c4\",\r\n    color: \"white\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  applyItem: {\r\n    position: \"relative\"\r\n  },\r\n  applyButton: {\r\n    position: \"absolute\",\r\n    bottom: 0\r\n  },\r\n  calculateInstallmentButton: {\r\n    height: '55px'\r\n  }\r\n}));\r\nexport default function LoanApplicationPanel(props) {\r\n  const classes = useStyles();\r\n  const [loanType, setLoanType] = React.useState('');\r\n  const [loanInfo, setLoanInfo] = React.useState([]);\r\n  const [period, setPeriod] = React.useState(\"\");\r\n  const [amount, setAmount] = React.useState(\"\");\r\n  const [interest, setInterest] = React.useState(\"\");\r\n  const [loanTitle, setLoanTitle] = React.useState(\"\");\r\n  const [loanPurpose, setLoanPurpose] = React.useState(\"\");\r\n  const [collateralAssetValue, setCollateralAssetValue] = React.useState(\"\");\r\n  const [settlementAccount, setSettlementAccount] = React.useState(\"\");\r\n  const [monthlyInstallment, setMonthlyInstallment] = React.useState(\"\");\r\n  const [maturityDate, setMaturityDate] = React.useState(\"\");\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n\r\n  const detailsRef = useRef();\r\n  const accountsRef = useRef([]);\r\n  const placeHolder = { ProductName: \"\", MinOpeningBalance: 0, PenaltyRate: 0, RepaymentPenaltyThreshold: 0, InterestRate: 0 }\r\n  const ltvRef = useRef(\"0\");\r\n  const gridTextField = (label, value, icon) => {\r\n    return (\r\n      <Grid container direction='row' alignItems='flex-end'>\r\n        <Grid item xs={2}>\r\n          {icon}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            value={value}\r\n            id=\"input-with-icon-grid\"\r\n            label={label}\r\n            className={classes.textField}\r\n            disabled={true}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    let loanInfo = JSON.parse(sessionStorage.getItem(\"productList\")).Product;\r\n    loanInfo.push(placeHolder);\r\n    setLoanInfo(loanInfo);\r\n    accountsRef.current = JSON.parse(sessionStorage.getItem(\"accounts\"))\r\n  }, []);\r\n  const handleChangeLoan = v => {\r\n    setLoanType(v);\r\n    ltvRef.current = loanInfo.filter(type => type.ProductName === v)[0].MaxLtvRatio\r\n  };\r\n  detailsRef.current = placeHolder;\r\n  if (loanInfo.length > 0) {\r\n    detailsRef.current = loanInfo.filter(loan => loan.ProductName === loanType)[0]\r\n  }\r\n  const handleCalculateInstallment = () => {\r\n    const username = sessionStorage.getItem('username');\r\n    const password = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    const productID = loanInfo.filter(loan => loan.ProductName === loanType)[0].ProductID;\r\n    calculateLoanInstallment(username, password, OTP, amount, productID, period).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        setSuccessAlert(\"Calculation successful!\")\r\n        setOpenSuccessAlert(true);\r\n        const installment = response.InstallmentResponse;\r\n        setInterest(installment.Interest);\r\n        setMaturityDate(installment.MaturityDate);\r\n        setMonthlyInstallment(installment.MonthlyInstallment);\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        props.setOTPDialogOpen(true);\r\n      }\r\n    })\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setLoanType(\"\")\r\n    setAmount(\"\")\r\n    setPeriod(\"\")\r\n    setInterest(\"\")\r\n    setMaturityDate(\"\")\r\n    setMonthlyInstallment(\"\")\r\n    setLoanTitle(\"\")\r\n    setLoanPurpose(\"\")\r\n    setCollateralAssetValue(\"\")\r\n    setCollateralAssetValue(\"\")\r\n    setSettlementAccount(\"\")\r\n    setMonthlyInstallment(\"\")\r\n    setMaturityDate(\"\")\r\n    detailsRef.current = {}\r\n  }\r\n  const handleApply = () => {\r\n    const username = sessionStorage.getItem('username');\r\n    const password = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    const productID = loanInfo.filter(loan => loan.ProductName === loanType)[0].ProductID;\r\n    const currency = accountsRef.current.filter(account => account.accountID === settlementAccount)[0].currency;\r\n    applyForLoan(\r\n      username,\r\n      password,\r\n      OTP,\r\n      amount,\r\n      loanPurpose,\r\n      productID,\r\n      period,\r\n      settlementAccount,\r\n      collateralAssetValue ? collateralAssetValue : 0,\r\n      currency,\r\n      loanTitle\r\n    ).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        clearFields()\r\n        setSuccessAlert(\"Application successful!\")\r\n        setOpenSuccessAlert(true);\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        props.setOTPDialogOpen(true);\r\n      }\r\n    })\r\n  };\r\n  console.log(accountsRef.current)\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" spacing={10}>\r\n        <Grid item className={classes.loanTypeItem}>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\" >\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>\r\n                  Loan Type\r\n              </InputLabel>\r\n                <Select\r\n                  labelWidth={80}\r\n                  value={loanType}\r\n                  onChange={e => handleChangeLoan(e.target.value)}\r\n                  className={classes.loanSelect}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {loanInfo.map(type => {\r\n                    return (<MenuItem key={type} value={type.ProductName}>{type.ProductName}</MenuItem>);\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                error={!(amount > 100000 || amount === \"\")}\r\n                value={amount}\r\n                onChange={e => setAmount(e.target.value)}\r\n                label=\"Loan Amount\"\r\n                helperText={amount > 100000 || amount === \"\" ? \"\" : \"Loan amount is no less than 100,000\"}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                error={!(period < 360 || period === \"\")}\r\n                value={period}\r\n                onChange={e => setPeriod(e.target.value)}\r\n                label=\"Loan Term (In months)\"\r\n                helperText={period < 360 || period === \"\" ? \"\" : \"Loan term is no larger than 360\"}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n                disabled={period >= 360 || amount < 100000 || period === \"\" || amount === \"\" || loanType === \"\"}\r\n                onClick={() => handleCalculateInstallment()}\r\n                className={classes.calculateInstallmentButton}\r\n              >\r\n                Calculate Installment\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\" spacing={5} className={classes.detailsContainer}>\r\n            <Grid item>\r\n              {gridTextField('Minimum Opening Balance', detailsRef.current.MinOpeningBalance, <AttachMoneyIcon />)}\r\n            </Grid>\r\n            <Grid item>\r\n              {gridTextField('Penalty Rate', detailsRef.current.PenaltyRate, <ThumbDownIcon />)}\r\n            </Grid>\r\n            <Grid item>\r\n              {gridTextField('Repayment Penalty Threshold', detailsRef.current.RepaymentPenaltyThreshold, <InfoIcon />)}\r\n            </Grid>\r\n            <Grid item>\r\n              {gridTextField('Interest Rate', detailsRef.current.InterestRate, <LocalAtmIcon />)}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container direction=\"row\" justify=\"center\" spacing={10}>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={interest}\r\n                    label=\"Interest\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    disabled={interest === \"\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={maturityDate}\r\n                    label=\"Maturity Date\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    disabled={maturityDate === \"\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={monthlyInstallment}\r\n                    label=\"Monthly Installment\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    disabled={monthlyInstallment === \"\"}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={loanTitle}\r\n                    disabled={interest === \"\"}\r\n                    label=\"Loan Title\"\r\n                    onChange={e => setLoanTitle(e.target.value)}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={loanPurpose}\r\n                    disabled={interest === \"\"}\r\n                    label=\"Loan Purpose\"\r\n                    onChange={e => setLoanPurpose(e.target.value)}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={collateralAssetValue}\r\n                    disabled={\r\n                      interest === \"\" ||\r\n                      ltvRef.current === \"0\"\r\n                    }\r\n                    label=\"Collateral Asset Value\"\r\n                    onChange={e => setCollateralAssetValue(e.target.value)}\r\n                    variant=\"outlined\"\r\n                    error={\r\n                      interest &&\r\n                      loanType &&\r\n                      collateralAssetValue !== \"\" &&\r\n                      loanInfo.filter(type => type.ProductName === loanType)[0].MaxLtvRatio > 0 &&\r\n                      (amount / ltvRef.current > collateralAssetValue)\r\n                    }\r\n                    helperText={\r\n                      (interest &&\r\n                        loanType &&\r\n                        collateralAssetValue !== \"\" &&\r\n                        loanInfo.filter(type => type.ProductName === loanType)[0].MaxLtvRatio > 0 &&\r\n                        (amount / ltvRef.current > collateralAssetValue)) ?\r\n                        \"Assest Value is no less than \" + amount / ltvRef.current :\r\n                        ltvRef.current === \"0\" ? \"not applicable\" : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel>\r\n                      Settlement Account\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelWidth={130}\r\n                      disabled={interest === \"\"}\r\n                      value={settlementAccount}\r\n                      onChange={e => setSettlementAccount(e.target.value)}\r\n                    >\r\n                      {accountsRef.current.filter(account => account.productID == '101').map(account => {\r\n                        return (<MenuItem key={account.accountID} value={account.accountID}>{account.accountID}</MenuItem>);\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item className={classes.applyItem}>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n                disabled={\r\n                  !loanType ||\r\n                  amount < 100000 ||\r\n                  period > 360 ||\r\n                  !period ||\r\n                  !loanTitle ||\r\n                  !loanPurpose ||\r\n                  (!collateralAssetValue && ltvRef.current !== \"0\") ||\r\n                  !settlementAccount\r\n                }\r\n                onClick={() => handleApply()}\r\n                className={classes.applyButton}\r\n              >\r\n                Apply\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item className={classes.applyItem}>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n        <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n          {successAlert}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport { calculateFullLoanRepayment, getLoanAccountDetails } from '../tBankApi';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n  loanSelect: {\r\n    color: \"#3f51b5\",\r\n    fontWeight: \"500\",\r\n    width: \"200px\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  loanTypeItem: {\r\n    textAlign: \"center\",\r\n  },\r\n  textField: {\r\n    width: '180px',\r\n    '& input': {\r\n      color: \"white !important\"\r\n    },\r\n    '& label': {\r\n      color: \"white !important\"\r\n    },\r\n    '& ::before': {\r\n      borderColor: \"white\"\r\n    }\r\n  },\r\n  detailsContainer: {\r\n    marginRight: \"-20px\",\r\n    marginLeft: \"-20px\",\r\n    backgroundColor: \"#6574c4\",\r\n    color: \"white\",\r\n    borderRadius: \"20px\",\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  applyItem: {\r\n    position: \"relative\"\r\n  },\r\n  calculateButton: {\r\n    height: '55px'\r\n  }\r\n}));\r\nexport default function LoanRepaymentPanel(props) {\r\n  const classes = useStyles();\r\n  const [repaymentType, setRepaymentType] = React.useState('');\r\n  const [account, setAccount] = React.useState('');\r\n  const [amount, setAmount] = React.useState('');\r\n  const [keepMaturity, setKeepMaturity] = React.useState(true);\r\n  const [loanAccounts, setLoanAccounts] = React.useState([{ accountID: \"\" }]);\r\n  const [calculationResult, setCalculationResult] = React.useState([])\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const loanAccountsRef = useRef([]);\r\n  loanAccountsRef.current = JSON.parse(sessionStorage\r\n    .getItem(\"accounts\"))\r\n    .filter(account => account.productID !== '101' && account.currentStatus === \"Open\");\r\n  const gridTextField = (label, value, icon) => {\r\n    return (\r\n      <Grid container direction='row' alignItems='flex-end'>\r\n        <Grid item xs={2}>\r\n          {icon}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            value={value}\r\n            id=\"input-with-icon-grid\"\r\n            label={label}\r\n            className={classes.textField}\r\n            disabled={true}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  const handleCalculate = () => {\r\n    const username = sessionStorage.getItem('username');\r\n    const password = sessionStorage.getItem('password');\r\n    const OTP = sessionStorage.getItem('OTP');\r\n    calculateFullLoanRepayment(username, password, OTP, account).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        setSuccessAlert(\"Calculation successful!\")\r\n        setOpenSuccessAlert(true);\r\n        const result = Object.entries(response.FullRepaymentResponse)\r\n          .reduce((rows, key, index) => (index % 4 == 0 ? rows.push([key])\r\n            : rows[rows.length - 1].push(key)) && rows, []);\r\n        setCalculationResult(result);\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        props.setOTPDialogOpen(true);\r\n      }\r\n    })\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" spacing={5}>\r\n        <Grid item>\r\n          <Grid container direction=\"row\" justify=\"space-evenly\">\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>\r\n                  Repayment Type\r\n                </InputLabel>\r\n                <Select\r\n                  labelWidth={120}\r\n                  value={repaymentType}\r\n                  onChange={e => setRepaymentType(e.target.value)}\r\n                  className={classes.loanSelect}\r\n                >\r\n                  <MenuItem value=\"fullRepayment\">\r\n                    <strong>Full Repayment</strong>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"partialRepayment\">\r\n                    <strong>Partial Repayment</strong>\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>\r\n                  Account\r\n                </InputLabel>\r\n                <Select\r\n                  labelWidth={80}\r\n                  value={account}\r\n                  onChange={e => setAccount(e.target.value)}\r\n                  className={classes.loanSelect}\r\n                >\r\n                  {loanAccountsRef.current.map(a => (\r\n                    <MenuItem key={a.accountID} value={a.accountID}>\r\n                      {a.accountID}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {repaymentType === \"partialRepayment\" ? (\r\n              <>\r\n                <Grid item>\r\n                  <TextField\r\n                    value={amount}\r\n                    label=\"Repayment Amount\"\r\n                    onChange={e => setAmount(e.target.value)}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Grid container direction=\"column\">\r\n                    <Grid item>\r\n                      Keep Maturity Date?\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={keepMaturity}\r\n                            onChange={e => setKeepMaturity(e.target.checked)}\r\n                            value=\"checkedA\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                        label={keepMaturity ? \"Yes\" : \"No\"}\r\n                        labelPlacement=\"end\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </>\r\n            ) : null}\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n                disabled={!account || !repaymentType}\r\n                onClick={() => handleCalculate()}\r\n                className={classes.calculateButton}\r\n              >\r\n                Calculate\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container direction=\"column\" spacing={5} className={classes.detailsContainer}>\r\n            {calculationResult.map(row => (\r\n              <Grid item>\r\n                <Grid container direction=\"row\" justify=\"space-evenly\">\r\n                  {row.map(data => (\r\n                    <Grid item>\r\n                      {gridTextField(data[0].replace(/([A-Z])/g, \" $1\"), data[1])}\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n        <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n          {successAlert}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}","import React, { Component, useState, useEffect, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { requestOTP, loginCustomer } from '../tBankApi';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  },\r\n  container: {\r\n    width: '400px',\r\n  },\r\n  opt: {\r\n    margin: '20% 10%',\r\n    height: '60%',\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nexport default function OTPDialog({\r\n  open,\r\n  handleClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [OTP, setOTP] = useState(\"\");\r\n  const setNewOTP = () => {\r\n    sessionStorage.setItem('OTP', OTP)\r\n    handleClose()\r\n  }\r\n  return (\r\n    <Dialog open={open} >\r\n      <DialogTitle>\r\n        OTP expired!\r\n        <br />\r\n        please update OTP and request again.\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n        <Grid container direction=\"row\">\r\n          <Grid item>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"otp\"\r\n              label=\"New OTP\"\r\n              type=\"otp\"\r\n              id=\"otp\"\r\n              autoComplete=\"\"\r\n              onChange={e => setOTP(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid>\r\n            <Button\r\n              disabled={!OTP}\r\n              color='secondary'\r\n              variant='contained'\r\n              className={classes.opt}\r\n              onClick={() => setNewOTP()}\r\n            >\r\n              confirm\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Dialog>\r\n  );\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport LoanApplicationPanel from '../components/LoanApplicationPanel';\r\nimport LoanRepaymentPanel from '../components/LoanRepaymentPanel';\r\nimport OTPDialog from \"../components/OTPDialog\";\r\nconst useStyles = makeStyles(theme => ({\r\n  loanCard: {\r\n    marginTop: \"80px\",\r\n    overflow: \"visible\",\r\n    borderRadius: \"40px\",\r\n  },\r\n  tabs: {\r\n    height: \"60px\"\r\n  }\r\n}))\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\nexport default function Loan() {\r\n  const [value, setValue] = React.useState(0);\r\n  const [OTPDialogOpen, setOTPDialogOpen] = React.useState(false)\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.loanCard}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n          className={classes.tabs}\r\n        >\r\n          <Tab label=\"Loan Application\" {...a11yProps(0)} />\r\n          <Tab label=\"Loan Repayment\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <LoanApplicationPanel\r\n          setOTPDialogOpen={setOTPDialogOpen}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <LoanRepaymentPanel\r\n          setOTPDialogOpen={setOTPDialogOpen}\r\n        />\r\n      </TabPanel>\r\n      <OTPDialog\r\n        open={OTPDialogOpen}\r\n        handleClose={() => setOTPDialogOpen(false)}\r\n      />\r\n    </Card>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { getCustomerDetails, getCustomerAccounts, getMonthlyBalanceTrend, getAllProductDetails } from '../tBankApi';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport OTPDialog from '../components/OTPDialog';\r\nexport default function Loading(props) {\r\n  const username = sessionStorage.getItem(\"username\");\r\n  const password = sessionStorage.getItem(\"password\");\r\n  const OTP = sessionStorage.getItem(\"OTP\");\r\n  const history = useHistory();\r\n  const [OTPDialogOpen, setOTPDialogOpen] = React.useState(false)\r\n  useEffect(() => {\r\n    const getCustomerDetailsPromise = getCustomerDetails(username, password, OTP).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        sessionStorage.setItem('customerId', response.CDMCustomer.customer.customerID);\r\n        sessionStorage.setItem('profile', JSON.stringify(response.CDMCustomer));\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        setOTPDialogOpen(true);\r\n      }\r\n    });\r\n    const getAllProductDetailsPromise = getAllProductDetails(username, password, OTP, 1).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        sessionStorage.setItem('productList', JSON.stringify(response[\"Product_ParametersList_Read-Response\"][\"ProductList\"]));\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        setOTPDialogOpen(true);\r\n      }\r\n    });\r\n    const getCustomerAccountsPromise = getCustomerAccounts(username, password, OTP).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n        sessionStorage.setItem('accounts', JSON.stringify(response.AccountList.account));\r\n        const accountPromises = response.AccountList.account.map(account => {\r\n          if (account.accountID) {\r\n            return getMonthlyBalanceTrend(username, password, OTP, account.accountID, 6).then(data => {\r\n              const balanceResponse = data.Content.ServiceResponse;\r\n              if (balanceResponse.ServiceRespHeader.ErrorText === 'invocation successful') {\r\n                let balances = balanceResponse.TrendData.MonthEndBalance;\r\n                balances.push(balanceResponse.TrendData.CurrentMonth);\r\n                return { id: account.accountID, data: balances };\r\n              } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n                setOTPDialogOpen(true);\r\n              }\r\n            })\r\n          }\r\n        });\r\n        return Promise.all(accountPromises).then(values => {\r\n          sessionStorage.setItem('balanceHistory', '{\"balance\": [' + values.map(obj => JSON.stringify(obj)).toString() + ']}');\r\n        })\r\n      } else if (response.ServiceRespHeader.ErrorText === \"OTP expired\") {\r\n        setOTPDialogOpen(true);\r\n      }\r\n    });\r\n    Promise.all([\r\n      getCustomerDetailsPromise,\r\n      getAllProductDetailsPromise,\r\n      getCustomerAccountsPromise\r\n    ]).then(() => {\r\n      if (history.location.pathname !== '/dashboard') {\r\n        history.push('/dashboard');\r\n      }\r\n    })\r\n  }, []);\r\n  return (\r\n    <>\r\n      <LinearProgress />\r\n      <OTPDialog\r\n        open={OTPDialogOpen}\r\n        handleClose={() => setOTPDialogOpen(false)}\r\n      />\r\n    </>\r\n\r\n  );\r\n}","import React, { Component, useState, useEffect, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { requestOTP, loginCustomer } from '../tBankApi';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  },\r\n  container: {\r\n    width: '400px',\r\n  },\r\n  opt: {\r\n    margin: '20% 10%',\r\n    height: '60%',\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nexport default function OTPLoginDialog({\r\n  open,\r\n  handleClose,\r\n  handleOpenRegister,\r\n  setOpenSuccessAlert,\r\n  setLogin,\r\n  setSuccessAlert }) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [OTP, setOTP] = useState(\"\");\r\n  const [failureAlert, setFailureAlert] = useState(null);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (failureAlert) {\r\n      setTimeout(() => { setFailureAlert(null) }, 10000);\r\n    }\r\n  }, [failureAlert])\r\n  // const handleClickRegister = () => {\r\n  //   handleClose();\r\n  //   handleOpenRegister();\r\n  // };\r\n  const handleLogin = (username, password) => {\r\n    const p1 = loginCustomer(username, password, OTP).then(data => {\r\n      const response = data.Content.ServiceResponse;\r\n      if (response.ServiceRespHeader.ErrorDetails=== 'Success') {\r\n        sessionStorage.setItem('username', username);\r\n        sessionStorage.setItem('password', password);\r\n        sessionStorage.setItem('OTP', OTP);\r\n        handleClose();\r\n        setLogin(true);\r\n        setSuccessAlert('Login Successful!');\r\n        setOpenSuccessAlert(true);\r\n        if (history.location.pathname != 'loading'){\r\n          history.push('/dashboard/loading');\r\n        }\r\n      } else {\r\n        setFailureAlert('Invalid username/password/OTP');\r\n      }\r\n    });\r\n  }\r\n  const handleOTP = (username, password) => {\r\n    requestOTP(username, password).then(data => {\r\n      if (data.Content.ServiceResponse.ServiceRespHeader.ErrorDetails.toLowerCase() === 'success') {\r\n        setSuccessAlert('OTP sent!');\r\n        setOpenSuccessAlert(true);\r\n      } else {\r\n        setFailureAlert('Invalid username/password');\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} >\r\n        <DialogTitle>\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Login\r\n            </Typography>\r\n            <Grid container direction='column'>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"usename\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  onChange={e => setUsername(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction='row'>\r\n                  <Grid item>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"otp\"\r\n                      label=\"OTP\"\r\n                      type=\"otp\"\r\n                      id=\"otp\"\r\n                      autoComplete=\"\"\r\n                      onChange={e => setOTP(e.target.value)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      disabled={!username || !password}\r\n                      color='secondary'\r\n                      variant='contained'\r\n                      className={classes.opt}\r\n                      onClick={() => handleOTP(username, password)}\r\n                    >\r\n                      Get OTP\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {failureAlert ? (\r\n              <Alert className={classes.failureAlert} severity=\"error\">\r\n                {failureAlert}\r\n              </Alert>\r\n            ) : null}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleLogin(username, password)}\r\n            >\r\n              Login\r\n            </Button>\r\n            {/* <Typography\r\n              onClick={handleClickRegister}\r\n              className={classes.links}\r\n            >\r\n              {\"Don't have an account? Register>>\"}\r\n            </Typography> */}\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React, { Component, useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// import { register } from '../api';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  container: {\r\n    width: '500px'\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  }\r\n}));\r\n\r\nexport default function RegisterDialog({\r\n  open,\r\n  handleClose,\r\n  handleOpenLogin,\r\n  setOpenSuccessAlert,\r\n  setLogin,\r\n  setSuccessAlert }) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [failureAlert, setFailureAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (repeatPassword == password) {\r\n      setError(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  },[repeatPassword]);\r\n  const handleRegister = (username, password) => {\r\n    // register(username, password).then(response => {\r\n    //   if (response.data.status == 0) {\r\n    //     setFailureAlert(true)\r\n    //   } else {\r\n    //     sessionStorage.setItem('username', username)\r\n    //     handleClose();\r\n    //     setOpenSuccessAlert(true);\r\n    //     setLogin(true)\r\n    //     setSuccessAlert('Registeration Successful');\r\n    //     if (history.location.pathname !== '/dashboard') {\r\n    //       history.push('/dashboard');\r\n    //     }\r\n    //   }\r\n    // });\r\n  }\r\n  const handleClickLogin = () => {\r\n    handleClose();\r\n    handleOpenLogin();\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} >\r\n        <DialogTitle>\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"username\"\r\n              name=\"email\"\r\n              autoComplete=\"xxx@xxx.com\"\r\n              autoFocus\r\n              onChange={e => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              error={error}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"repeat password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setRepeatPassword(e.target.value)}\r\n            />\r\n            {failureAlert ? (\r\n              <Alert className={classes.failureAlert} severity=\"error\">\r\n                Registration Failed\r\n              </Alert>\r\n            ) : null}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleRegister(username, password)}\r\n            >\r\n              Register\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Typography\r\n                  onClick={handleClickLogin}\r\n                  className={classes.links}\r\n                >\r\n                  Already have an account? Login >>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  logoutDialogTitle: {\r\n    backgroundColor: '#3f51b5',\r\n    color: '#FFFFFF',\r\n  }\r\n}));\r\n\r\nexport default function LogoutDialog(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog\r\n      open={props.openLogoutDialog}\r\n      onClose={() => props.setOpenLogoutDialog(false)}\r\n    >\r\n      <DialogTitle className={classes.logoutDialogTitle}>{\"Logout\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Do you want to logout?\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpenLogoutDialog(false)} variant='contained' color=\"primary\">\r\n          No\r\n        </Button>\r\n        <Button onClick={props.handleLogout} color=\"secondary\" variant='contained' autoFocus>\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport classNames from 'classnames';\r\n\r\nconst drawerWidth = 240\r\n// core components\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    '&$focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: '64px',\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  headerButton: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  logoutDialogTitle: {\r\n    backgroundColor: '#3f51b5',\r\n    color: '#FFFFFF',\r\n  },\r\n  appBarLanding: {\r\n    position: 'fixed',\r\n    transition: 'height 1000ms'\r\n  },\r\n  transparent: {\r\n    backgroundColor: 'transparent',\r\n  }\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const { color, landing, login, setLogin, handleOpenLoginDialog, setOpenLogoutDialog, open, setOpen, showOnScroll } = props;\r\n  const classes = useStyles();\r\n  const [show, setShow] = useState(!landing);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (showOnScroll) {\r\n      window.addEventListener(\"scroll\", handleShow);\r\n    }\r\n    return function cleanup() {\r\n      if (showOnScroll) {\r\n        window.removeEventListener(\"scroll\", handleShow);\r\n      }\r\n    };\r\n  });\r\n  const handleShow = () => {\r\n    const { showOnScroll } = props;\r\n    const windowsScrollTop = window.pageYOffset;\r\n    if (windowsScrollTop > showOnScroll.height) {\r\n      setShow(true);\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n  const appBarClasses = classNames({\r\n    [classes.transparent]: !show,\r\n    [classes.appBar]: true,\r\n    [classes.appBarShift]: open,\r\n    [classes.appBarLanding]: landing\r\n  });\r\n  const render = () => {\r\n    return (\r\n      <AppBar position=\"absolute\" className={appBarClasses}>\r\n        <Toolbar className={classes.toolbar}>\r\n          {landing ? null : (\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n          )}\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            IS444\r\n          </Typography>\r\n          {login ? (\r\n            <>\r\n              <div className={classes.usernameDiv}>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                  {sessionStorage.getItem('username').length > 15 ? (\r\n                    sessionStorage.getItem('username').slice(0, 13) + '...'\r\n                  ) : (sessionStorage.getItem('username'))}\r\n                </Typography>\r\n              </div>\r\n              <IconButton color=\"inherit\"\r\n                className={classes.headerButton}\r\n                onClick={() => setOpenLogoutDialog(true)}\r\n              >\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n              <IconButton color=\"inherit\"\r\n                className={classes.headerButton}\r\n                onClick={() => handleOpenLoginDialog(true)}\r\n              >\r\n                <PersonIcon />\r\n              </IconButton>\r\n            )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n  return render();\r\n}","\r\nimport React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport { useHistory, Route, Switch } from \"react-router-dom\";\r\nimport Recommender from '../pages/Recommender';\r\nimport Profile from '../pages/Profile';\r\nimport Loan from '../pages/Loan';\r\nimport Loading from '../pages/Loading';\r\nimport OTPLoginDialog from '../components/OTPLoginDialog';\r\nimport RegisterDialog from '../components/RegisterDialog';\r\nimport LogoutDialog from '../components/LogoutDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useEffect } from 'react';\r\nimport Header from '../components/Header';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    overflow: 'hidden',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    backgroundColor: '#f0efea',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    '&$focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: '64px',\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  headerButton: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showLoginDialog, setShowLoginDialog] = React.useState(false);\r\n  const [showRegisterDialog, setShowRegisterDialog] = React.useState(false);\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const [login, setLogin] = React.useState(sessionStorage.getItem('username'));\r\n  const [openLogoutDialog, setOpenLogoutDialog] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenLoginDialog = () => {\r\n    setShowLoginDialog(true);\r\n  };\r\n  const handleLogout = () => {\r\n    setOpenLogoutDialog(false);\r\n    setLogin(false);\r\n    history.push('/');\r\n    sessionStorage.clear()\r\n  };\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem('username')) {\r\n      setLogin(true);\r\n    } else {\r\n      setLogin(false);\r\n    }\r\n  }, []);\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header\r\n        login={login}\r\n        setLogin={setLogin}\r\n        handleOpenLoginDialog={handleOpenLoginDialog}\r\n        setOpenLogoutDialog={setOpenLogoutDialog}\r\n        open={open}\r\n        setOpen={setOpen}\r\n      />\r\n      <OTPLoginDialog\r\n        open={showLoginDialog}\r\n        handleClose={() => setShowLoginDialog(false)}\r\n        handleOpenRegister={() => setShowRegisterDialog(true)}\r\n        setLogin={() => setLogin(true)}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      <RegisterDialog\r\n        open={showRegisterDialog}\r\n        handleClose={() => setShowRegisterDialog(false)}\r\n        handleOpenLogin={() => setShowLoginDialog(true)}\r\n        setLogin={() => setLogin(true)}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push('/dashboard/loading')} >\r\n            <ListItemIcon>\r\n              <PermContactCalendarIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Profile\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/dashboard/recommender')}>\r\n            <ListItemIcon>\r\n              <ThumbUpAltIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Recommender\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/dashboard/loan')}>\r\n            <ListItemIcon>\r\n              <LocalAtmIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Loan\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Route exact path=\"/dashboard\" component={Profile} />\r\n          <Route path=\"/dashboard/recommender\" component={Recommender} />\r\n          <Route path=\"/dashboard/loan\" component={Loan} />\r\n          <Route path=\"/dashboard/loading\" component={Loading} />\r\n        </Container>\r\n        <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n          <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n            {successAlert}\r\n          </Alert>\r\n        </Snackbar>\r\n        <LogoutDialog\r\n          setOpenLogoutDialog={setOpenLogoutDialog}\r\n          handleLogout={handleLogout}\r\n          openLogoutDialog={openLogoutDialog}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// core components\r\nconst useStyles = makeStyles(theme=>({\r\n  parallax: {\r\n    height: \"90vh\",\r\n    maxHeight: \"1000px\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    border: \"0\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  filter: {\r\n    \"&:before\": {\r\n      background: \"rgba(0, 0, 0, 0.5)\"\r\n    },\r\n    \"&:after,&:before\": {\r\n      position: \"absolute\",\r\n      zIndex: \"1\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"block\",\r\n      left: \"0\",\r\n      top: \"0\",\r\n      content: \"''\"\r\n    }\r\n  },\r\n  small: {\r\n    height: \"380px\"\r\n  }\r\n}));\r\n\r\nexport default function Parallax(props) {\r\n  const classes = useStyles();\r\n  let windowScrollTop;\r\n  if (window.innerWidth >= 768) {\r\n    windowScrollTop = window.pageYOffset / 3;\r\n  } else {\r\n    windowScrollTop = 0;\r\n  }\r\n  const [transform, setTransform] = React.useState(\r\n    \"translate3d(0,\" + windowScrollTop + \"px,0)\"\r\n  );\r\n  React.useEffect(() => {\r\n    if (window.innerWidth >= 768) {\r\n      window.addEventListener(\"scroll\", resetTransform);\r\n    }\r\n    return function cleanup() {\r\n      if (window.innerWidth >= 768) {\r\n        window.removeEventListener(\"scroll\", resetTransform);\r\n      }\r\n    };\r\n  });\r\n  const resetTransform = () => {\r\n    var windowScrollTop = window.pageYOffset / 3;\r\n    setTransform(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\r\n  };\r\n  const { filter, className, children, style, image, small } = props;\r\n  const parallaxClasses = classNames({\r\n    [classes.parallax]: true,\r\n    [classes.filter]: filter,\r\n    [classes.small]: small,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div\r\n      className={parallaxClasses}\r\n      style={{\r\n        ...style,\r\n        backgroundImage: \"url(\" + image + \")\",\r\n        transform: transform\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nParallax.propTypes = {\r\n  className: PropTypes.string,\r\n  filter: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  style: PropTypes.string,\r\n  image: PropTypes.string,\r\n  small: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\n\r\n// core components\r\n// import Header from \"components/Header/Header.js\";\r\n// import Footer from \"components/Footer/Footer.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import HeaderLinks from \"components/Header/HeaderLinks.js\";\r\nimport Parallax from \"../components/Parallax.jsx\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Header from '../components/Header';\r\nimport OTPLoginDialog from '../components/OTPLoginDialog';\r\n// import RegisterDialog from '../components/RegisterDialog';\r\nimport LogoutDialog from '../components/LogoutDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoanService from \"../assets/LoanService.jpg\";\r\nimport PersonalProfile from \"../assets/PersonalProfile.jpg\";\r\nimport RecommendationEngine from \"../assets/RecommendationEngine.jpg\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    zIndex: \"12\",\r\n    color: \"#FFFFFF\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n  infoContainer: {\r\n    zIndex: \"12\",\r\n    color: \"#FFFFFF\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  title: {\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n    minHeight: \"32px\",\r\n    color: \"#FFFFFF\",\r\n    textDecoration: \"none\"\r\n  },\r\n  subtitle: {\r\n    fontSize: \"1.313rem\",\r\n    maxWidth: \"500px\",\r\n    margin: \"10px auto 0\"\r\n  },\r\n  main: {\r\n    background: \"#FFFFFF\",\r\n    position: \"relative\",\r\n    zIndex: \"3\"\r\n  },\r\n  mainRaised: {\r\n    margin: \"-60px 30px 0px\",\r\n    borderRadius: \"6px\",\r\n    boxShadow:\r\n      \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\r\n  },\r\n  placeholder: {\r\n    height: '1000px'\r\n  },\r\n  startButton: {\r\n    height: '50px'\r\n  },\r\n  titleContainer: {\r\n    padding: \"0 80px\"\r\n  },\r\n  featureBox: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    display: \"inline-block\",\r\n    \"&:hover\": {\r\n      opacity: '0.8',\r\n      color: \"black\"\r\n    }\r\n  },\r\n  featurePicture: {\r\n    width: \"100%\",\r\n  },\r\n  textBox: {\r\n    position: \"absolute\",\r\n    zIndex: \"999\",\r\n    margin: \"0 auto\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    top: \"25%\",\r\n    fontSize: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n  text: {\r\n    margin: \"0\",\r\n    textAlign: \"center\",\r\n  },\r\n  whiteBox: {\r\n    display: \"inline-block\",\r\n    borderStyle: \"double\"\r\n  }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n  const classes = useStyles();\r\n  const { ...rest } = props;\r\n  const [showLoginDialog, setShowLoginDialog] = React.useState(false);\r\n  const [showRegisterDialog, setShowRegisterDialog] = React.useState(false);\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const [login, setLogin] = React.useState(sessionStorage.getItem('username'));\r\n  const [openLogoutDialog, setOpenLogoutDialog] = React.useState(false);\r\n  const history = useHistory();\r\n  const handleLogout = () => {\r\n    setOpenLogoutDialog(false);\r\n    setLogin(false);\r\n    history.push('/');\r\n    sessionStorage.clear()\r\n  };\r\n  return (\r\n    <div>\r\n      <Header\r\n        landing\r\n        showOnScroll={{\r\n          height: 550,\r\n        }}\r\n        handleOpenLoginDialog={() => setShowLoginDialog(true)}\r\n        login={login}\r\n        setLogin={setLogin}\r\n        setOpenLogoutDialog={() => setOpenLogoutDialog(true)}\r\n      />\r\n      <Parallax filter image={require(\"../assets/landing-bg.jpg\")}>\r\n        <div className={classes.container}>\r\n          <Grid container className={classes.titleContainer}>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n              <h1 className={classes.title}>Your Personalised Recommender</h1>\r\n              <h4>\r\n                Provide personal, intelligent recommendations.\r\n              </h4>\r\n              <br />\r\n              <Button\r\n                className={classes.startButton}\r\n                variant='contained'\r\n                color='secondary'\r\n                onClick={() => setShowLoginDialog(true)}\r\n              >\r\n                <Typography variant='h6'>\r\n                  Get Started\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Parallax>\r\n      <div className={classNames(classes.main, classes.mainRaised)}>\r\n        <div className={classes.infoContainer}>\r\n          <div className={classes.featureBox}>\r\n            <img className={classes.featurePicture} src={PersonalProfile} />\r\n            <div className={classes.textBox}>\r\n              <div className={classes.whiteBox}>\r\n                <h2 className={classes.text}>Personal Profile</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.featureBox}>\r\n            <img className={classes.featurePicture} src={RecommendationEngine} />\r\n            <div className={classes.textBox}>\r\n              <div className={classes.whiteBox}>\r\n                <h2 className={classes.text}>Recommendation</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.featureBox}>\r\n            <img className={classes.featurePicture} src={LoanService} />\r\n            <div className={classes.textBox}>\r\n              <div className={classes.whiteBox}>\r\n                <h2 className={classes.text}>Loan Service</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <OTPLoginDialog\r\n        open={showLoginDialog}\r\n        handleClose={() => setShowLoginDialog(false)}\r\n        handleOpenRegister={() => setShowRegisterDialog(true)}\r\n        setLogin={() => null}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      {/* <RegisterDialog\r\n        open={showRegisterDialog}\r\n        handleClose={() => setShowRegisterDialog(false)}\r\n        handleOpenLogin={() => setShowLoginDialog(true)}\r\n        setLogin={() => null}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      /> */}\r\n      <LogoutDialog\r\n        setOpenLogoutDialog={setOpenLogoutDialog}\r\n        handleLogout={handleLogout}\r\n        openLogoutDialog={openLogoutDialog}\r\n      />\r\n      <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n        <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n          {successAlert}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\n// Provider and Consumer are connected through their \"parent\" context\r\nconst context = createContext();\r\n\r\n// Provider will be exported wrapped in ConfigProvider component.\r\nfunction ContextProvider(props) {\r\n  const [profile, setProfile] = useState({});\r\n  return (\r\n    <context.Provider\r\n      value={{\r\n        profile: profile,\r\n        setProfile: setProfile\r\n      }}\r\n    >\r\n      {props.children}\r\n    </context.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider };\r\nexport default context;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport history from './history';\r\nimport Dashboard from './layout/Dashboard';\r\n// import { Test } from './Test';\r\nimport LandingPage from './layout/LandingPage';\r\nimport { Route } from \"react-router-dom\";\r\nimport { ContextProvider } from './Context';\r\n\r\nexport default function App() {\r\n  return (\r\n    <ContextProvider>\r\n      <Router history={history}>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n      </Router>\r\n    </ContextProvider>\r\n  );\r\n}"],"sourceRoot":""}