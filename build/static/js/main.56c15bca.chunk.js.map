{"version":3,"sources":["assets/terrace1.jpg","assets/terrace2.jpg","assets/terrace3.jpg","assets/terrace4.jpg","assets/terrace5.jpg","assets/terrace6.jpg","assets/terrace7.jpg","assets/terrace8.jpg","assets/terrace9.jpg","assets/terrace10.jpg","assets/food.jpg","assets/clean.jpg","assets/study.png","assets/attendance.jpg","history.js","api.jsx","components/PersonCard.jsx","components/PersonManagementDialog.jsx","components/AttendanceDialog.jsx","pages/Attendance.jsx","pages/Food.jsx","components/HomeCarousel.jsx","components/FeatureCard.jsx","pages/Home.jsx","pages/Study.jsx","components/LoginDialog.jsx","components/RegisterDialog.jsx","layout/Dashboard.jsx","serviceWorker.js","index.js","App.js"],"names":["module","exports","createBrowserHistory","endpoint","person","action","metaData","request","Object","keys","forEach","key","axios","get","then","response","catch","error","console","log","attendance","useStyles","makeStyles","theme","PersonCard","props","name","present","attendanceList","setAttendanceList","date","classes","useState","setProcessing","Card","className","nameCard","CardHeader","avatar","Avatar","aria-label","charAt","IconButton","Checkbox","checked","onChange","toISOString","split","filter","att","handleChange","value","inputProps","title","backgroundColor","blue","color","listItem","width","formControl","marginRight","deleteButton","height","nameInput","PersonManagementDialog","onClose","open","personList","setPersonList","setAlertData","staffList","studentList","React","useRef","newName","setNewName","newRole","setNewRole","processing","handleDeletePerson","severity","content","personInfo","Dialog","aria-labelledby","DialogTitle","id","Grid","container","direction","item","List","map","ListItem","ListItemAvatar","ListItemText","primary","ListItemSecondaryAction","Fab","onClick","Divider","FormControl","variant","InputLabel","htmlFor","Select","native","e","target","TextField","label","p","includes","AttendanceDialog","personDict","rec","sort","calendar","borderRadius","padding","boxShadow","margin","fontSize","functionButtonsGrid","textAlign","cardHeader","background","controlButton","Attendance","Date","setDate","openManagementDialog","setOpenManagementDialog","openAttendanceDialog","setOpenAttendanceDialog","alertData","useEffect","data","message","replace","pop","info","push","xs","spacing","ButtonGroup","size","functionButtons","Button","Snackbar","autoHideDuration","Alert","Food","image","HomeCarousel","images","src","terrace1","terrace2","terrace3","terrace4","terrace5","terrace6","terrace7","terrace8","terrace9","terrace10","Carousel","Item","alt","Caption","card","maxWidth","media","FeatureCard","children","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","component","introCard","Home","history","useHistory","FoodImage","CleanImage","StudyImage","AttendanceImage","Study","paper","marginBottom","display","flexDirection","alignItems","palette","secondary","main","form","marginTop","submit","closeButton","position","right","top","grey","outline","links","cursor","textDecoration","failureAlert","LoginDialog","handleClose","handleOpenRegister","setOpenSuccessAlert","setLogin","setSuccessAlert","username","setUsername","password","setPassword","setFailureAlert","handleLogin","login","status","sessionStorage","setItem","Container","required","fullWidth","autoComplete","autoFocus","type","RegisterDialog","handleOpenLogin","repeatPassword","setRepeatPassword","setError","handleRegister","register","root","overflow","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","paddingTop","paddingBottom","fixedHeight","headerButton","logoutDialogTitle","Dashboard","setOpen","showLoginDialog","setShowLoginDialog","showRegisterDialog","setShowRegisterDialog","openSuccessAlert","successAlert","openLogoutDialog","setOpenLogoutDialog","getItem","AppBar","clsx","Toolbar","edge","noWrap","usernameDiv","length","slice","Drawer","button","ListItemIcon","exact","path","DialogContent","DialogContentText","DialogActions","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56c15bca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/terrace1.8ec7208b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace2.76051db5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace3.df425f95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace4.3ef04579.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace5.ef4c4266.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace6.2302d33b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace7.cac8f7b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace8.bc288b1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace9.138a8eab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/terrace10.b7ecdf70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food.b3fdee42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clean.187d15e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/study.894f4c68.png\";","module.exports = __webpack_public_path__ + \"static/media/attendance.6075dfa3.jpg\";","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import axios from 'axios';\r\n\r\nconst dev = false;\r\n\r\nconst localEndPoint = 'localhost:5000/';\r\nconst serverEndPoint = 'https://absolute-nexus-265212.appspot.com/';\r\nconst endpoint = dev ? localEndPoint : serverEndPoint;\r\nexport const login = (username, password) => {\r\n  return axios.get(endpoint + 'login?username=' + username + '&password=' + password)\r\n    .then(function (response) {\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const register = (username, password) => {\r\n  return axios.get(endpoint + 'register?username=' + username + '&password=' + password)\r\n    .then(function (response) {\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const person = (action, metaData) => {\r\n  let request = endpoint + 'person?action=' + action;\r\n  Object.keys(metaData).forEach(key => {\r\n    request += '&';\r\n    request += key;\r\n    request += '=';\r\n    request += metaData[key];\r\n  });\r\n  return axios.get(request)\r\n    .then(function (response) {\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const attendance = (action, metaData) => {\r\n  let request = endpoint + 'attendance?action=' + action;\r\n  Object.keys(metaData).forEach(key => {\r\n    request += '&';\r\n    request += key;\r\n    request += '=';\r\n    request += metaData[key];\r\n  });\r\n  return axios.get(request)\r\n    .then(function (response) {\r\n      return response;\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    });\r\n};","import React, { Component, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {attendance} from '../api';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n}));\r\n\r\nexport default function PersonCard(props) {\r\n  const { name, present, attendanceList, setAttendanceList,date } = props;\r\n  const classes = useStyles();\r\n  const [processing, setProcessing] = useState(false);\r\n  const handleChange = (name, present) => {\r\n    if (present === '-1') {\r\n      setProcessing(true);\r\n      attendance('update', { 'date': date.toISOString().split('T')[0], 'data': name + ',' + '1' }).then(\r\n        response => {\r\n          setProcessing(false);\r\n          setAttendanceList([...attendanceList.filter(att => att[0] !== name), [name , date.toISOString().split('T')[0],  '1']]);\r\n        }\r\n      );\r\n    } else {\r\n      setProcessing(true);\r\n      attendance('update', { 'date': date.toISOString().split('T')[0], 'data': name + ',' + '-1' }).then(\r\n        response => {\r\n          setProcessing(false);\r\n          setAttendanceList([...attendanceList.filter(att => att[0] !== name), [name,date.toISOString().split('T')[0], '-1']]);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Card className={classes.nameCard}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {name.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <Checkbox\r\n              checked={present==1}\r\n              onChange={() => handleChange(name, present)}\r\n              value=\"primary\"\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n          </IconButton>\r\n        }\r\n        title={name}\r\n      />\r\n    </Card>\r\n\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useEffect } from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { person } from '../api';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  listItem: {\r\n    width: '200px',\r\n    '&:hover': {\r\n      backgroundColor: '#e8e8e8',\r\n    }\r\n  },\r\n  formControl: {\r\n    marginRight: '20px',\r\n  },\r\n  deleteButton: {\r\n    height: '42px',\r\n    width: '42px',\r\n  },\r\n  nameInput: {\r\n    width: '60%'\r\n  },\r\n});\r\n\r\nexport default function PersonManagementDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, open, personList, setPersonList, setAlertData } = props;\r\n  const staffList = personList.filter(person => person[1] === 'staff');\r\n  const studentList = personList.filter(person => person[1] === 'student');\r\n  const inputLabel = React.useRef(null);\r\n  const [newName, setNewName] = useState('');\r\n  const [newRole, setNewRole] = useState('');\r\n  const [processing, setProcessing] = useState(false);\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n  const handleAddPerson = () => {\r\n    if (personList.map(p => p[0]).includes(newName)) {\r\n      setAlertData({ open: true, severity: 'error', content: '人员已存在' })\r\n    } else {\r\n      if (!processing) {\r\n        setProcessing(true);\r\n        person('add', { 'name': newName, 'role': newRole }).then(response => {\r\n          setProcessing(false)\r\n          setAlertData({ open: true, severity: 'success', content: '添加成功' })\r\n          setPersonList([...personList, [newName, newRole]]);\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const handleDeletePerson = name => {\r\n    if (!processing) {\r\n      setProcessing(true);\r\n      person('delete', { 'name': name }).then(response => {\r\n        setProcessing(false);\r\n        setAlertData({ open: true, severity: 'success', content: '删除成功' })\r\n        setPersonList(personList.filter(personInfo => personInfo[0] !== name));\r\n      });\r\n    };\r\n  }\r\n    return (\r\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n        <DialogTitle id=\"simple-dialog-title\">人员管理</DialogTitle>\r\n        <Grid container direction='column'>\r\n          <Grid item>\r\n            <Grid container>\r\n              <Grid item>\r\n                <List>\r\n                  {staffList.map(personInfo => (\r\n                    <ListItem className={classes.listItem} key={personInfo}>\r\n                      <ListItemAvatar>\r\n                        <Avatar className={classes.avatar}>\r\n                          <LocalLibraryIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary={personInfo[0]} />\r\n                      <ListItemSecondaryAction>\r\n                        <Fab\r\n                          className={classes.deleteButton}\r\n                          onClick={() => handleDeletePerson(personInfo[0])}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </Fab>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Grid>\r\n              <Grid item>\r\n                <List>\r\n                  {studentList.map(personInfo => (\r\n                    <ListItem className={classes.listItem} key={personInfo}>\r\n                      <ListItemAvatar>\r\n                        <Avatar className={classes.avatar}>\r\n                          <WcIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary={personInfo[0]} />\r\n                      <ListItemSecondaryAction>\r\n                        <Fab\r\n                          className={classes.deleteButton}\r\n                          onClick={() => handleDeletePerson(personInfo[0])}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </Fab>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid item>\r\n            <List>\r\n              <ListItem>\r\n                <FormControl variant=\"filled\" className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"filled-age-native-simple\">身份</InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={newRole}\r\n                    onChange={e => setNewRole(e.target.value)}\r\n                    inputProps={{\r\n                      name: 'newRole',\r\n                      id: 'filled-age-native-simple',\r\n                    }}\r\n                  >\r\n                    <option value=\"\" />\r\n                    <option value={'staff'}>老师</option>\r\n                    <option value={'student'}>学生</option>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  value={newName}\r\n                  onChange={e => setNewName(e.target.value)}\r\n                  id=\"filled-basic\"\r\n                  label=\"姓名\"\r\n                  variant=\"filled\"\r\n                  className={classes.nameInput}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Fab\r\n                    className={classes.deleteButton}\r\n                    onClick={handleAddPerson}\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </Dialog>\r\n    );\r\n  }","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useEffect } from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { person, attendance } from '../api';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  listItem: {\r\n    width: '200px',\r\n    '&:hover': {\r\n      backgroundColor: '#e8e8e8',\r\n    }\r\n  },\r\n  formControl: {\r\n    marginRight: '20px',\r\n  },\r\n  deleteButton: {\r\n    height: '42px',\r\n    width: '42px',\r\n  },\r\n  nameInput: {\r\n    width: '60%'\r\n  },\r\n});\r\n\r\nexport default function AttendanceDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, open, personList, date, attendanceList, setAttendanceList, setAlertData } = props;\r\n  const personDict = {};\r\n  personList.forEach(p => {\r\n    personDict[p[0]] = p[1];\r\n  });\r\n  const staffList = attendanceList.filter(rec => personDict[rec[0]] === 'staff').sort();\r\n  const studentList = attendanceList.filter(rec => personDict[rec[0]] === 'student').sort();\r\n  const [processing, setProcessing] = useState(false);\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n  const handleChange = rec => {\r\n    if (rec[2] === '0') {\r\n      setProcessing(true);\r\n      attendance('update', { 'date': date.toISOString().split('T')[0], 'data': rec[0] + ',' + '-1' }).then(\r\n        response => {\r\n          setProcessing(false);\r\n          setAttendanceList([...attendanceList.filter(att => att[0] !== rec[0]), [rec[0], rec[1], '-1']]);\r\n        }\r\n      );\r\n    } else {\r\n      setProcessing(true);\r\n      attendance('update', { 'date': date.toISOString().split('T')[0], 'data': rec[0] + ',' + '0' }).then(\r\n        response => {\r\n          setProcessing(false);\r\n          setAttendanceList([...attendanceList.filter(att => att[0] !== rec[0]), [rec[0], rec[1], '0']]);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">计划出席</DialogTitle>\r\n      <Grid container direction='column'>\r\n        <Grid item>\r\n          <Grid container>\r\n            <Grid item>\r\n              <List>\r\n                {staffList.map(person => (\r\n                  <ListItem className={classes.listItem} key={person}>\r\n                    <ListItemAvatar>\r\n                      <Avatar className={classes.avatar}>\r\n                        <LocalLibraryIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={person[0]} />\r\n                    <ListItemSecondaryAction>\r\n                      <Checkbox\r\n                        checked={person[2] === '-1' || person[2] === '1'}\r\n                        onChange={() => handleChange(person)}\r\n                        value=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n            <Grid item>\r\n              <List>\r\n                {studentList.map(person => (\r\n                  <ListItem className={classes.listItem} key={person}>\r\n                    <ListItemAvatar>\r\n                      <Avatar className={classes.avatar}>\r\n                        <WcIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={person[0]} />\r\n                    <ListItemSecondaryAction>\r\n                      <Checkbox\r\n                        checked={person[2] === '-1' || person[2] === '1'}\r\n                        onChange={() => handleChange(person)}\r\n                        value=\"primary\"\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Grid item>\r\n        </Grid>\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Calendar from 'react-calendar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport PersonCard from '../components/PersonCard';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport PersonManagementDialog from '../components/PersonManagementDialog';\r\nimport AttendanceDialog from '../components/AttendanceDialog';\r\nimport { person, attendance } from '../api';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  calendar: {\r\n    borderRadius: '5px',\r\n    padding: '10px;',\r\n    boxShadow: '5px 10px #888888;',\r\n    margin: 'auto',\r\n    width: '80%',\r\n    fontSize: '23px',\r\n  },\r\n  nameCard: {\r\n    height: '180px',\r\n  },\r\n  functionButtonsGrid: {\r\n    textAlign: 'center',\r\n  },\r\n  cardHeader: {\r\n    padding: '3px 20px;',\r\n    background: 'gray',\r\n    color: 'white;',\r\n  },\r\n  controlButton: {\r\nmargin: '10px 15px',\r\n  }\r\n}));\r\n\r\nexport default function Attendance() {\r\n  const classes = useStyles();\r\n  const [date, setDate] = useState(new Date);\r\n  const [openManagementDialog, setOpenManagementDialog] = useState(false);\r\n  const [openAttendanceDialog, setOpenAttendanceDialog] = useState(false);\r\n  const [personList, setPersonList] = useState([])\r\n  const [alertData, setAlertData] = useState({ open: false, severity: '', content: '' });\r\n  const [attendanceList, setAttendanceList] = useState([]);\r\n  const personDict = {};\r\n  personList.forEach(p => {\r\n    personDict[p[0]] = p[1];\r\n  });\r\n  const staffList = attendanceList.filter(rec => personDict[rec[0]] === 'staff').sort();\r\n  const studentList = attendanceList.filter(rec => personDict[rec[0]] === 'student').sort();\r\n  useEffect(() => {\r\n    const personPromise = person('read', {}).then(response => {\r\n      let personInfo = response.data.message\r\n        .replace(/\"/, '')\r\n        .replace(/\"/, '')\r\n        .split(';');\r\n      personInfo.pop();\r\n      personInfo = personInfo.map(info => info.split(','));\r\n      setPersonList(personInfo);\r\n      attendance('read', { 'date': date.toISOString().split('T')[0] }).then(response => {\r\n        let attendanceList = response.data.message\r\n          .replace(/\"/, '')\r\n          .replace(/\"/, '')\r\n          .split(';');\r\n        attendanceList.pop();\r\n        attendanceList = attendanceList.map(info => info.split(','));\r\n        personInfo.forEach(person => {\r\n          if (!attendanceList.map(rec => rec[0]).includes(person[0])) {\r\n            attendanceList.push([person[0], date.toISOString().split('T')[0], '0']);\r\n          }\r\n        });\r\n        setAttendanceList(attendanceList);\r\n      })\r\n    })\r\n  }, [date]);\r\n  // useEffect (() => {setDate(new Date)}, []);\r\n  // const prevAttendanceList = usePrevious(attendanceList);\r\n  return date?(\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={8}>\r\n          <div>\r\n            <Calendar\r\n              className={classes.calendar}\r\n              value={date}\r\n              onChange={date => setDate(date)}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Grid\r\n            container\r\n            direction='column'\r\n            spacing={2}\r\n          >\r\n            <Grid item className={classes.functionButtonsGrid}>\r\n              <ButtonGroup\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                className={classes.functionButtons}\r\n              >\r\n                <Button\r\n                  className={classes.controlButton}\r\n                  onClick={() => setOpenManagementDialog(true)}\r\n                >\r\n                  管理\r\n                </Button>\r\n                <Button\r\n                  className={classes.controlButton}\r\n                  onClick={() => setOpenAttendanceDialog(true)}\r\n                >\r\n                  出席\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n              <Card>\r\n                <CardHeader\r\n                  className={classes.cardHeader}\r\n                  avatar={<LocalLibraryIcon />}\r\n                  title='老师'\r\n                />\r\n                {studentList.filter(rec => rec[2] != 0).map(rec =>\r\n                  <PersonCard\r\n                    name={rec[0]}\r\n                    present={rec[2]}\r\n                    date={date}\r\n                    attendanceList={attendanceList}\r\n                    setAttendanceList={setAttendanceList}\r\n                  />\r\n                )}\r\n              </Card>\r\n            </Grid>\r\n            <Grid item>\r\n              <Card>\r\n                <CardHeader\r\n                  className={classes.cardHeader}\r\n                  avatar={<WcIcon />}\r\n                  title='学生'\r\n                />\r\n                {staffList.filter(rec => rec[2] != 0).map(rec =>\r\n                  <PersonCard\r\n                    name={rec[0]}\r\n                    present={rec[2]}\r\n                    attendanceList={attendanceList}\r\n                    date={date}\r\n                    setAttendanceList={setAttendanceList}\r\n                  />\r\n                )}\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid >\r\n      <PersonManagementDialog\r\n        open={openManagementDialog}\r\n        onClose={() => setOpenManagementDialog(false)}\r\n        personList={personList}\r\n        setPersonList={setPersonList}\r\n        setAlertData={setAlertData}\r\n      />\r\n      <AttendanceDialog\r\n        open={openAttendanceDialog}\r\n        onClose={() => setOpenAttendanceDialog(false)}\r\n        attendanceList={attendanceList}\r\n        personList={personList}\r\n        setAttendanceList={setAttendanceList}\r\n        setAlertData={setAlertData}\r\n        date={date}\r\n      />\r\n      <Snackbar open={alertData.open} autoHideDuration={2000} onClose={() => setAlertData({ ...alertData, open: false })}>\r\n        <Alert variant='filled' onClose={() => setAlertData({ ...alertData, open: false })} severity={alertData.severity}>\r\n          {alertData.content}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  ):null;\r\n}","\r\nimport React from 'react';\r\nexport default function Food(){\r\n    return (<div>Food</div>)\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport terrace1 from '../assets/terrace1.jpg';\r\nimport terrace2 from '../assets/terrace2.jpg';\r\nimport terrace3 from '../assets/terrace3.jpg';\r\nimport terrace4 from '../assets/terrace4.jpg';\r\nimport terrace5 from '../assets/terrace5.jpg';\r\nimport terrace6 from '../assets/terrace6.jpg';\r\nimport terrace7 from '../assets/terrace7.jpg';\r\nimport terrace8 from '../assets/terrace8.jpg';\r\nimport terrace9 from '../assets/terrace9.jpg';\r\nimport terrace10 from '../assets/terrace10.jpg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  image:{\r\n    height:'450px'\r\n  }\r\n}));\r\n\r\nexport default function HomeCarousel() {\r\n  const classes = useStyles();\r\n  const images = [\r\n    { id: 1, src:  terrace1 , title: '标题', content: '介绍' },\r\n    { id: 2, src:  terrace2 , title: '标题', content: '介绍' },\r\n    { id: 3, src:  terrace3 , title: '标题', content: '介绍' },\r\n    { id: 4, src:  terrace4 , title: '标题', content: '介绍' },\r\n    { id: 5, src:  terrace5 , title: '标题', content: '介绍' },\r\n    { id: 6, src:  terrace6 , title: '标题', content: '介绍' },\r\n    { id: 7, src:  terrace7 , title: '标题', content: '介绍' },\r\n    { id: 8, src:  terrace8 , title: '标题', content: '介绍' },\r\n    { id: 9, src: terrace9 , title: '标题', content: '介绍' },\r\n    { id: 10, src:  terrace10 , title: '标题', content: '介绍' },\r\n  ];\r\n  return (\r\n    <Carousel>\r\n      {images.map(image => {\r\n        return (\r\n          <Carousel.Item key={images.id} className={classes.image}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={image.src}\r\n              alt=\"image missing\"\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>{image.title}</h3>\r\n              <p>{image.content}</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function FeatureCard({image, title, onClick, children}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea onClick={onClick}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={image}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n          </Typography>\r\n          {children}\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeCarousel from '../components/HomeCarousel';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FeatureCard from '../components/FeatureCard';\r\nimport FoodImage from '../assets/food.jpg';\r\nimport CleanImage from '../assets/clean.jpg';\r\nimport StudyImage from '../assets/study.png';\r\nimport AttendanceImage from '../assets/attendance.jpg';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles(theme => ({\r\n    introCard: {\r\n        height: '600px',\r\n    },\r\n}));\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    return (\r\n        <Grid container direction=\"column\" spacing={5}>\r\n            <Grid item xs={12}>\r\n                <Card className={classes.introCard}>\r\n                    <Grid container>\r\n                        <Grid item xs={7}>\r\n                            <HomeCarousel />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={3}>\r\n                        <FeatureCard\r\n                            image={FoodImage}\r\n                            title='餐饮'\r\n                            onClick={() => history.push('/food')}\r\n                        >\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                                across all continents except Antarctica\r\n                            </Typography>\r\n                        </FeatureCard>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FeatureCard\r\n                            image={CleanImage}\r\n                            title='卫生'\r\n                            onClick={() => history.push('/clean')}\r\n                        >\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                                across all continents except Antarctica\r\n                            </Typography>\r\n                        </FeatureCard>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FeatureCard\r\n                            image={StudyImage}\r\n                            title='学习'\r\n                            onClick={() => history.push('/study')}\r\n                        >\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                                across all continents except Antarctica\r\n                            </Typography>\r\n                        </FeatureCard>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FeatureCard\r\n                            image={AttendanceImage}\r\n                            title='出勤'\r\n                            onClick={() => history.push('/attendance')}\r\n                        >\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                                across all continents except Antarctica\r\n                            </Typography>\r\n                        </FeatureCard>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Card>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nexport default function Study(){\r\n    return (<div>Study</div>)\r\n}","import React, { Component, useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { login } from '../api';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  },\r\n  container: {\r\n    width: '400px',\r\n  }\r\n}));\r\n\r\nexport default function LoginDialog({\r\n  open,\r\n  handleClose,\r\n  handleOpenRegister,\r\n  setOpenSuccessAlert,\r\n  setLogin,\r\n  setSuccessAlert }) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [failureAlert, setFailureAlert] = useState(false);\r\n  const handleClickRegister = () => {\r\n    handleClose();\r\n    handleOpenRegister();\r\n  };\r\n  const handleLogin = (username, password) => {\r\n    login(username, password).then(response => {\r\n      if (response.data.status == 0) {\r\n        setFailureAlert(true)\r\n      } else {\r\n        sessionStorage.setItem('username', username)\r\n        handleClose();\r\n        setOpenSuccessAlert(true);\r\n        setLogin(true);\r\n        setSuccessAlert('登录成功！');\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} >\r\n        <DialogTitle>\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              登录\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"邮箱地址\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              onChange={e => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"密码\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            {failureAlert ? (\r\n              <Alert className={classes.failureAlert} severity=\"error\">\r\n                用户名或密码错误\r\n              </Alert>\r\n            ) : null}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleLogin(username, password)}\r\n            >\r\n              登录\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Typography>\r\n                  忘记密码?\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  onClick={handleClickRegister}\r\n                  className={classes.links}\r\n                >\r\n                  {\"已有帐号？ 前去注册 >>\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React, { Component, useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { register } from '../api';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    '&:focus': {\r\n      outline: 'none'\r\n    },\r\n  },\r\n  links: {\r\n    color: '#3f51b5',\r\n    cursor: 'pointer',\r\n    fontSize: '0.9rem',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  container: {\r\n    width: '500px'\r\n  },\r\n  failureAlert: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  }\r\n}));\r\n\r\nexport default function RegisterDialog({\r\n  open,\r\n  handleClose,\r\n  handleOpenLogin,\r\n  setOpenSuccessAlert,\r\n  setLogin,\r\n  setSuccessAlert }) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [failureAlert, setFailureAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  useEffect(() => {\r\n    if (repeatPassword == password) {\r\n      setError(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  },[repeatPassword]);\r\n  const handleRegister = (username, password) => {\r\n    register(username, password).then(response => {\r\n      if (response.data.status == 0) {\r\n        setFailureAlert(true)\r\n      } else {\r\n        sessionStorage.setItem('username', username)\r\n        handleClose();\r\n        setOpenSuccessAlert(true);\r\n        setLogin(true)\r\n        setSuccessAlert('注册成功！');\r\n      }\r\n    });\r\n  }\r\n  const handleClickLogin = () => {\r\n    handleClose();\r\n    handleOpenLogin();\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} >\r\n        <DialogTitle>\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              注册\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"邮箱地址\"\r\n              name=\"email\"\r\n              autoComplete=\"xxx@xxx.com\"\r\n              autoFocus\r\n              onChange={e => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"密码\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              error={error}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"重复密码\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={e => setRepeatPassword(e.target.value)}\r\n            />\r\n            {failureAlert ? (\r\n              <Alert className={classes.failureAlert} severity=\"error\">\r\n                注册失败 \r\n              </Alert>\r\n            ) : null}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={() => handleRegister(username, password)}\r\n            >\r\n              注册\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Typography\r\n                  onClick={handleClickLogin}\r\n                  className={classes.links}\r\n                >\r\n                  已有帐号？前去登录 >>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport Attendance from '../pages/Attendance';\r\nimport Food from '../pages/Food';\r\nimport Home from '../pages/Home';\r\nimport Study from '../pages/Study';\r\nimport Clean from '../pages/Clean';\r\nimport LoginDialog from '../components/LoginDialog';\r\nimport RegisterDialog from '../components/RegisterDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useEffect } from 'react';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    overflow: 'hidden',\r\n    height: '100vh',\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    '&$focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: '64px',\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  headerButton: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n  logoutDialogTitle: {\r\n    backgroundColor: '#3f51b5',\r\n    color: '#FFFFFF',\r\n  }\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showLoginDialog, setShowLoginDialog] = React.useState(false);\r\n  const [showRegisterDialog, setShowRegisterDialog] = React.useState(false);\r\n  const [openSuccessAlert, setOpenSuccessAlert] = React.useState(false);\r\n  const [successAlert, setSuccessAlert] = React.useState(\"\");\r\n  const [login, setLogin] = React.useState(false);\r\n  const [openLogoutDialog, setOpenLogoutDialog] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenLoginDialog = () => {\r\n    setShowLoginDialog(true);\r\n  };\r\n  const handleLogout = () => {\r\n    setOpenLogoutDialog(false);\r\n    setLogin(false);\r\n  };\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem('username')) {\r\n      setLogin(true);\r\n    } else {\r\n      setLogin(false);\r\n    }\r\n  }, []);\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            [家庭名字 + Logo]\r\n          </Typography>\r\n          {login ? (\r\n            <>\r\n              <div className={classes.usernameDiv}>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                  {sessionStorage.getItem('username').length > 15 ? (\r\n                    sessionStorage.getItem('username').slice(0, 13) + '...'\r\n                  ) : (sessionStorage.getItem('username'))}\r\n                </Typography>\r\n              </div>\r\n              <IconButton color=\"inherit\"\r\n                className={classes.headerButton}\r\n                onClick={() => setOpenLogoutDialog('true')}\r\n              >\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n              <IconButton color=\"inherit\"\r\n                className={classes.headerButton}\r\n                onClick={() => handleOpenLoginDialog()}\r\n              >\r\n                <PersonIcon />\r\n              </IconButton>\r\n            )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <LoginDialog\r\n        open={showLoginDialog}\r\n        handleClose={() => setShowLoginDialog(false)}\r\n        handleOpenRegister={() => setShowRegisterDialog(true)}\r\n        setLogin={() => setLogin(true)}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      <RegisterDialog\r\n        open={showRegisterDialog}\r\n        handleClose={() => setShowRegisterDialog(false)}\r\n        handleOpenLogin={() => setShowLoginDialog(true)}\r\n        setLogin={() => setLogin(true)}\r\n        setOpenSuccessAlert={setOpenSuccessAlert}\r\n        setSuccessAlert={setSuccessAlert}\r\n      />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push('/')} >\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"主页\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/food')}>\r\n            <ListItemIcon>\r\n              <FastfoodIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"餐饮\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/clean')}>\r\n            <ListItemIcon>\r\n              <DeleteIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"卫生\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/study')}>\r\n            <ListItemIcon>\r\n              <LocalLibraryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"学习\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push('/attendance')}>\r\n            <ListItemIcon>\r\n              <PlaylistAddCheckIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"出勤\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/food\" component={Food} />\r\n            <Route exact path=\"/study\" component={Study} />\r\n            <Route exact path=\"/attendance\" component={Attendance} />\r\n          </Switch>\r\n        </Container>\r\n        <Snackbar open={openSuccessAlert} autoHideDuration={3000} onClose={() => setOpenSuccessAlert(false)}>\r\n          <Alert variant='filled' onClose={() => setOpenSuccessAlert(false)} severity=\"success\">\r\n            {successAlert}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Dialog\r\n          open={openLogoutDialog}\r\n          onClose={() => setOpenLogoutDialog(false)}\r\n        >\r\n          <DialogTitle className={classes.logoutDialogTitle}>{\"注销\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              是否要注销账号?\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setOpenLogoutDialog(false)} color=\"primary\">\r\n              <Typography component=\"h2\" variant=\"h6\" >\r\n                取消\r\n              </Typography>\r\n            </Button>\r\n            <Button onClick={handleLogout} color=\"primary\" autoFocus>\r\n              <Typography component=\"h2\" variant=\"h6\" >\r\n                登出\r\n              </Typography>\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </main>\r\n    </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport history from './history';\nimport Dashboard from './layout/Dashboard';\n\nexport default function App() {\n  return (\n    <Router history={history}>\n      <Dashboard/>\n    </Router>\n  );\n}"],"sourceRoot":""}